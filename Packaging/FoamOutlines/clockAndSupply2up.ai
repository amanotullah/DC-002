%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.2
%%For: (TechShop Member) ()
%%Title: (clockAndSupply2up.ai)
%%CreationDate: 12/11/2016 2:21 PM
%%Canvassize: 16383
%%BoundingBox: 66 -271 559 -17
%%HiResBoundingBox: 66.2397 -270.001 558.001 -17.9995
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 288.5 -144.5 288.5 -144.5
%AI3_TileBox: -96 -432.96 672 144.96
%AI3_DocumentPreview: None
%AI5_ArtSize: 576 288
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -16 76 2.05 1245 878 18 0 0 81 119 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-18 -540
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 68 8
%%BeginData: 4291 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD4FFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD5CFFA8FFA8FD21FFA8FFA8FD58FFA8FD27FFA8FD
%54FFA8CAA8FD29FFA8FDD1FFA8FD31FFA8FD4CFFA8FD7EFFA8FD35FFA8FD
%48FFA8FD7EFFA8FD92FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FD58FFA8FD0FFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD0FFFA8FD44FFA8FD2BFFA8FD0FFFA8FD42FFA8FD0DFFA8FD
%1FFFA8FFA8FD0DFFA8FD4EFFA8FD72FFA8FD0BFFA8FD07FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8FD0BFFA8FD40FFA8FD0BFF
%A8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%5EFFA8FD05FFA8FFA8FD19FFA8FD14FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD45FFA8FD
%11FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD15FFA8FD0BFFA8FD23FFA8FD05FFA8
%FD54FFA8FD25FFA8FD0FFFA8A8FD27FFA8FD15FFA8FD0BFFA8FFFFFFA8FD
%25FFA8FD54FFA8FD35FFA8A8FD27FFA8FD15FFA8FD09FFA8FD05FFA8FD21
%FFA8FFFFFFA8FD0AFFCAFD49FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD15FF
%A8FD09FFA8FD05FFA8FD21FFA8FFFFFFA8FD54FFA8FD2BFFA8FD09FFA8A8
%FD27FFA8FD15FFA8FD09FFA8FD05FFA8FD21FFA8FFFFFFA8FD54FFA8FD2B
%FFA8FD09FFA8A8FD27FFA8FD15FFA8FD0FFFA8FD21FFA8FD58FFA8FD2BFF
%A8FD09FFA8A8FD27FFA8FD15FFA8FD09FFA8FD05FFA8FD21FFA8FFFFFFA8
%FD0AFFCAFD49FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD15FFA8FD09FFA8FD
%05FFA8FD21FFA8FFFFFFA8FD54FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD15
%FFA8FD09FFA8FD05FFA8FD21FFA8FFFFFFA8FD54FFA8FD2BFFA8FD09FFA8
%A8FD27FFA8FD15FFA8FD0FFFA8FD21FFA8FD58FFA8FD2BFFA8FD09FFA8A8
%FD27FFA8FD15FFA8FD09FFA8FD05FFA8FD21FFA8FFFFFFA8FD0AFFCAFD49
%FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD15FFA8FD09FFA8FD05FFA8FD21FF
%A8FFFFFFA8FD54FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD15FFA8FD09FFA8
%FD05FFA8FD21FFA8FFFFFFCAFD54FFA8FD2BFFA8FD09FFA8A8FD27FFA8FD
%15FFA8FD0FFFA8FD21FFA8FFFFFFA8FD54FFA8FD25FFA8FD0FFFA8A8FD27
%FFA8FD15FFA8FD0BFFA8FFFFFFA8FD1FFFA8FD05FFA8FD0AFFA8FFFFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD27FFA8FD2FFFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD19FFA8FD0BFFA8FD05
%FFA8FD1BFFA8FD52FFA8FD0BFFA8FD05FFA8FD19FFA8FD07FFCAFD58FFA8
%FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07
%FFA8FD0BFFA8FD72FFA8FD4EFFA8FD0DFFA8FD21FFA8FD0DFFA8FD50FFA8
%FD1FFFA8FD0DFFA8FD42FFA8FD0FFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FD0DFFA8FD56FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD58FFA8FD39FFA8FD46FFA8FD80
%FFA8FD35FFA8FD4AFFA8FD33FFA8FD4CFFA8FD31FFA8FD4EFFA8FD2FFFA8
%FD50FFA8FD2BFFA8FFA8FD7CFFA8FD58FFA8FD23FFA8FFA8FD5AFFA8FFA8
%FD1FFFA8FFA8FD5EFFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FFA8FD10FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCBCB
CACAC9C9C8C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBABAB9B8B8B7B6B6B5
B5B4B3B2B2B1B0AFAEAEADACABABAAA9A9A8A7A6A5A5A4A3A2A1A19F9E9E9D9C9B9A999897969695
9493929291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7A797877767574737271706F
6E6D6C6B6A6968666564636261605F5E5D5C5B5A5857565554535251504F4E4D4C4B4A4948474645
444241403F3E3D3B3A39373635333231302F2E2D2C2A2928272625242322201F1E1D1C1B1A191716
15141312100F0E0D0C0B0A0907060504
>
<
181818161616161515151513131313121212121111111110101010100E0E0E0F0D0D0D0D0C0C0C0C
0B0B0B0B0A0A0A0A0A09090A0A080909090808080807070708060607070606060606050506060505
05050405050504040505040404050504040405040404040303040402030303020203030202030303
02030303020303030203030302030404030404050504050505040505050505050605050606050606
060506060707060708080708080908080909080809090909090A0A0A0A0B0B0A0B0B0C0B0B0C0C0B
0C0C0D0C0D0D0E0D0D0E0E0F0D0E0E0F0E0E0F0F0E0F10100F101111101111121211121213121213
13121313141314141514151516151616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFDFCFCFCFBFCFBFBFBFBFBFAFAFAFAFA
FAFAF9FAFAF9F9F9F9F9F8F8F8F8F8F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAA
ABABABABACACACACACADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4
B4B4B5B5B5B5B6B6B6B6B7B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBD
BEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7
C7C8C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCDCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1
D1D1D1D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADA
DADBDBDBDBDCDCDCDCDDDDDDDDDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464645454545454444444444434343
43434242424242414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B
3B3A3A3A3A3A39393939393838383838373737373736363636363535353535343434343433333333
3332323232323131313130303030302F2F2F2F2F2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2B2B2B2B2B
2A2A2A2A2A2929292929282828282827272727262626262625252525252424242424232323232322
22222222212121212120202020201F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A
1A1A1A19191919191818181818171717
>
4 %_Br
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCB
CBCBCACAC9C9C8C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0BFBFBFBEBEBDBDBCBBBBBBBABAB9
B8B8B8B7B6B6B5B5B5B4B3B2B2B2B1B0AFAEAEAEADACABABABAAA9A9A9A8A7A6A6A5A5A4A4A3A2A1
A1A19F9E9E9E9D9C9C9B9A99999897969696959594939292929191908F8E8E8D8C8C8B8A8A898888
8786868584848382828180807F7E7E7D7C7C7B7A7A7A79797878777676757474737372717170706F
6E6E6D6D6C6B6B6A6A696968666665656464636262616160605F5F5E5D5D5C5C5B5B595A58585757
565655555454535252515150504F4F4F4E4E4D4D4C4C4B4B4A4A4949484847474646464545444442
4241414140403F3F3E3E3E3D3D3B3B3A3A3A39393737373636353535333332323231313130302F2F
2F2E2E2E2D2D2D2C2C2A2A2A29292928282827272726262625252524242424232323222222202020
201F1F1F1E1E1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191917171717161616161515151515
141414141313131313121212121210101010100F0F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C
0C0C0C0A0A0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090907070707070707070707070606
06060606060606060606050505050505050505050505050505050505050504040404040404040404
040404040404040404040404040404040404
>
<
181818161616161515151513131313121212121211111111101010100E0E0E0E0F0D0D0D0D0C0C0C
0C0C0B0B0B0B0A0A0A0A0A0909090A0A080909090908080808070707070806060707070606060606
05050506060505050505040505050504040505050404040405050404040405040404040404030304
04040203030303030202030303020203030303020203030303020203030303020303030303020303
04040403040404050504040405050505040405050505050505050506060505050606060605060606
06060705060606070707060607070808080707080808080909080808090909090808080809090909
0909090909090A0A0A0A0A0A0A0B0B0B0B0A0A0A0B0B0B0B0C0C0B0B0B0B0C0C0C0C0C0B0B0C0C0C
0C0D0D0D0C0C0D0D0D0D0D0E0E0F0D0D0D0D0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0F0F0D0E0E0E0E
0E0F0F0F0F0F0E0E0E0F0F0F101010101010110F0F10101011111111111111121010111111111111
11121212121211111211111212121212121212131311111212121212121212131313131313131312
12121212131313131313131313131414141414131313131313141414141414141414141414151515
15151516161414141414151515151515151515151515151515151516161616161616161616161717
17171515151515151515161616161616161616161616161616161616161616161616161616161616
161616161616161616161616161616161616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFBFCFCFCFCFCFBFBFB
FBFBFBFBFBFBFBFBFAFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAF9F9F9F9F9F9FAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242526
262728292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F4041424344454546474849
4A4A4B4C4D4E4F4F5051525353545556575858595A5B5C5C5D5E5F5F606162636364656666676869
696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7C7D7E7F7F808181828383848585
8687878889898A8B8B8C8D8D8E8F8F9091919293939495959696979898999A9A9B9B9C9D9D9E9E9F
A0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADADAEAEAFB0B0B1B1B2B2B3B3B4B4B5B5
B6B6B7B7B8B8B9BABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9
C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D9D9
D9DADADADBDBDBDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6
E6E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0
F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8
F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAA
AAAAABABABABACACACACACADADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B2
B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9B9BABABA
BABABBBBBBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C0C1C1C1
C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7
C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CDCDCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D1D1D1D1D1
D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5
D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8
D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADADB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464646454545454544444444444443
43434343424242424241414141414140404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C
3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A39393939393939383838383838373737373737363636363636
35353535353535343434343434343333333333333232323232323231313131313131303030303030
30302F2F2F2F2F2F2F2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B
2A2A2A2A2A2A2A2A2929292929292929292828282828282828282727272727272727272626262626
26262626252525252525252525252424242424242424242423232323232323232323232222222222
2222222222222121212121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F
1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A
1A1A1A1A1A1A1A1A1A1A191919191919191919191919191919191919191919191919191919181818
18181818181818181818181818181818181818181818181818181818181818181818181818181717
17171717171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717
>
4 %_Br
[
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 Bs
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 %_BS
%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 Bs
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 %_BS
%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0000000102020303030404040506050606070808090A0A0B0C0B0C0C0D0E0E0F1010111112131313
13141515161617181819191A1A1B1C1C1D1D1E1E1F20202122232324252526262727282829292A2B
2B2C2C2D2D2E2E2F2F3030313132323333353436353737383839393A3A3B3B3C3C3D3E3F3F414141
434344444545464647474748484A4A4B4B4C4C4C4E4E4F4F50505051515252525353545454565657
575758585A5A5A5B5B5D5D5D5E5E5E5F5F6160606262626363636565656666666767676969696A6A
6A6B6C6C6D6D6D6E6E6E707070707171717373737474747476767676787878797979797B7B7B7B7C
7C7D7C7E7E7E7E808080808181818182838383838485858585868686868688888888888989898A8A
8B8B8B8B8B8B8D8D8D8D8D8D8E8E8E8E8E8E8E909090909090909191919191919191939393939393
93939394949494949494959595949496969696969696969696969696969696989898989898989898
98989898989898989898989898
>
<
00000001020303040506070809090B0B0D0E0F111213131314161618191A1B1C1C1E1F201F202122
24242527282929292B2C2D2E2F30303132343536373738393B3C3D3D3D3F40414242434445474647
48494B4A4C4D4E4F4F50515252535556575758595B5B5C5D5D5E5F60606163646465676668696B6B
6C6E6D6F7070717272737574767777797A7A7B7D7C7E7F7F81818283838486868787888A8A8B8B8C
8E8E8F8F9092929393959596979799999B9A9C9C9D9D9FA0A0A2A1A3A3A4A4A6A6A7A7A8A8AAAAAB
ABACACAEAEAFAFAFB1B1B2B2B4B4B5B5B7B7B7B8B8B9B9BBBBBBBCBCBDBDBDBEBFC0C0C0C1C1C2C2
C2C4C4C3C5C5C6C6C6C7C7C7C9C9C9CACACACCCCCCCDCDCDCFCECED0D0D0D0D1D1D1D2D2D2D2D4D4
D4D5D5D5D5D6D6D6D6D8D8D8D8D9D9D9D9D9DADADADADCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDF
DFDFDFDFDFE1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E5E5E5E5E5
E5E5E5E5E5E5E5E5E5E5E5E5E5
>
0
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000
>
<
FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F5F4F3F3F2F1F1F0EFEFEEEEEDECECEBEAEAE9E9E8E7E7E6
E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D5D5D4D4D3D3D2D2D1D1D0CF
CFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBC
BBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0B0AFAFAEAEAEADADACACACABABAA
AAAAA9A9A8A8A8A7A7A6A6A6A5A5A5A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9D9D9D9C9C
9C9B9B9B9A9A9A999999989898989797979696969595959594949494939393929292929191919190
9090908F8F8F8F8E8E8E8E8D8D8D8D8D8C8C8C8C8B8B8B8B8B8A8A8A8A8A89898989898888888888
87878787878786868686868685858585858585848484848484848383838383838383828282828282
828282818181818181818181818181808080808080808080808080808080807F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8
B7B6B5B5B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9D9C9B9A9A
9998989796969594949392929190908F8E8E8D8C8C8B8A8A89898887878685858484838282818180
7F7F7E7E7D7C7C7B7B7A7A7978787777767675757474737272717170706F6F6E6E6D6D6C6C6B6B6A
6A696968686767676666656564646363626262616160605F5F5F5E5E5D5D5D5C5C5B5B5B5A5A5959
5958585857575656565555555454545353535252525151515050504F4F4F4F4E4E4E4D4D4D4D4C4C
4C4B4B4B4B4A4A4A4A49494949484848484847474747464646464645454545454544444444444443
43434343434242424242424242414141414141414141404040404040404040404040403F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEDECECEB
EBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDEDDDDDCDCDBDBDADADAD9D9
D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCDCCCCCBCBCBCACAC9C9C9
C8C8C8C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBB
BBBABABAB9B9B9B8B8B8B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3B3B3B2B2B2B1B1B1B1B0B0B0B0AF
AFAFAEAEAEAEADADADADACACACACACABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7A7A6A6A6
A6A6A5A5A5A5A5A4A4A4A4A4A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A0A0A0A0A0A0A09F9F9F9F
9F9F9F9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9A9A
9A9A9A9A9A9A9A9A9A9A999999999999999999999999999999999999999898989898989898989898
98989898989898989898989898
>
4 %_Br
[
0 0 0 0 1 1 1 2 30 63.1579 %_BS
%_0 0 0 0 1 1 1 2 30 63.1579 Bs
0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 %_BS
%_0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 26)
(Unnamed gradient 26) 0 3 Bd
[
<
00000000000001010101010102020203030303030404040405050505050506060605050606060606
070808080808080909090908080809090909090909090A0A0A0A0A0A0A0A0B0B0B0B0A0B0B0A0A0A
0C0C0B0C0C0B0B0B0B0B0B0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0F0E0E0E
0E1010101010101010101010100F10101010100F0F0F0F0F0F111111111111111111111010101010
11111111111010101010101010101010101110101010101010101010121212121212121211111111
11111111121212121212121212121212121212121212121212121212121111111111111111111111
11111111111111121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
1212
>
<
0000000102030304050607060708090A0B0C0C0D0E1011111213141415161717181A1A1B1C1B1D1E
1E1F202021212223232424252527262727282829292A2A2B2B2C2C2E2D2F2E2E2F2F313131323234
33333434343636363737373838383939393B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F3F3F414141
41404241414141434343434343444444444444454545454545454546464646464646464747474747
4747474747484848484848484848484848484A4A4A4A4A4A4949494949494949494949494A4A4A4A
4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C
>
<
000002030506080A0C0E10131417191A1C1E20212426272A2D2D2F31333437383A3B3E3E41424346
47484A4C4D4F50515253565758595B5C5D6061626364666768696B6C6D6C6E707072737476757677
797A7A7B7D7E7E8081818284848687878889898B8B8C8E8E8F8F9090929293939494969697979898
989A999B9B9B9D9C9D9D9D9F9F9EA0A0A0A1A1A1A2A2A2A2A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7
A9A9A9A9A9AAAAAAAAAAABABABABABABABADACACACACACACAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAF
AFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3
>
0
<
FFFFFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7
F7F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2
F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECEC
>
<
FFFEFDFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEFEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E1E0DF
DFDEDDDDDCDCDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCB
CBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0
C0C0BFBFBFBFBFBEBEBEBEBEBEBDBDBDBDBDBDBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABA
BABABABABAB9B9B9B9B9B9B9B9B9B9B9B9B9B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B7B7B7B7
B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E2E0DEDCDBD9D7D6D4D2D1CFCECCCBC9C8C6C5C3C2C0BFBEBC
BBBAB8B7B6B4B3B2B1B0AEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594949392
9190908F8E8D8D8C8B8B8A89898887878685858484838282818180807F7F7E7E7D7D7C7C7B7B7A7A
7A7979787878777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6E
6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868
68686868676767676767676767676767676767666666666666666666666666666666666666666666
66666666666666656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
6565
>
4 %_Br
0
0
0
0
1
1
1
4 %_Br
[
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 Bs
1 0 13 45 %_BS
%_1 0 13 45 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 1 2 Bd
[
<
0E0E0E0E0D0F0E0E0E0E0E0E0F0F0F0F0E0E0F0F0F0E0E0F0F0F0F0F111110101011111111101111
1111121212
>
<
18181A1A1B1B1C1E1E1F2121222325252729292B2B2C2E2F313234363737393A3C3D3E4041434445
4648494A4C
>
<
CFCFCFCECECFCDCDCCCCCBCACAC9C9C8C8C8C7C6C5C5C3C3C2C3C2C2C2C2C0BEBEBCBCBABAB9B9B8
B7B6B5B5B3
>
0
<
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDED
EDEDECECEC
>
<
DADAD9D9D8D8D7D6D6D5D4D4D3D2D1D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBDBCBB
BAB9B8B7B6
>
<
5050505151515252535353545455555656565757585859595A5A5B5B5C5C5D5E5E5F5F6060616162
6363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 57.3034 0 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 57.3034 0 Bs
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 31)
(Unnamed gradient 31) 0 3 Bd
[
<
12121211111111101111111110101010110F0F0F0F0F0F0F0E0E0E0F0F0F0F0E0E0E0E0F0F0F0F0F
0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E
0E0E0E0E0E
>
<
4C4A49484645444341403E3D3C3A3A39373634343231312F2E2E2C2B2B2929292927272525232322
222121211F1F1F1E1E1E1E1C1C1C1C1B1B1B1B1B1A1A1A1A1A1A1A1A1A1818181818181818181818
1818181818
>
<
B3B5B5B6B7B8B9B9BABABCBCBEBEC0C0C2C1C2C2C3C2C2C3C3C3C5C5C6C7C7C8C8C8C8C9C9C9CACA
CACACACBCCCCCCCCCDCDCDCDCDCDCDCFCECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
CFCFCFCFCF
>
0
<
ECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2
F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4
>
<
B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C7C8C9C9CACBCBCCCDCDCECECFCFD0D0D1D1D2D2D3
D3D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9D9D9D9D9D9DADADADADADADADADADADA
DADADADADA
>
<
656464636362616160605F5F5E5E5D5D5C5C5B5B5A5A5A5959595858575757565656565555555454
54545453535353535252525252525251515151515151515151505050505050505050505050505050
5050505050
>
4 %_Br
<
0E0E0D0E0E0E0E0F0F0F0E0F0F0F0E0E0F0F0F0F11101010101111111011111111121212
>
<
181A1B1C1E1F212223252728292B2C2E2F31343637393A3C3D3E40414344454648494A4C
>
<
CFCECECDCDCCCACAC9C9C8C7C7C5C5C3C2C2C2C2C2C0C0BEBEBCBABAB9B9B8B7B6B5B5B3
>
0
<
F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECEC
>
<
DAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
>
<
505151525253545455555657575858595A5A5B5B5C5D5D5E5E5F60606161626363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 100 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 100 Bs
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 23.7288 50 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 23.7288 50 Bs
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 0 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7903 8047 m
-7903 7988.0254 L
-7887.4902 7988.0254 L
-7887.4902 8047 L
-7903 8047 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M-7903 7998.0586 m
-7903 7997.5742 L
-7887.4878 7997.5742 L
-7887.4878 7998.0586 L
-7903 7998.0586 L
f
-7903 8015.3838 m
-7903 8014.8965 L
-7887.4878 8014.8965 L
-7887.4878 8015.3838 L
-7903 8015.3838 L
f
-7902.9995 8000.3682 m
-7902.9995 7999.6494 L
-7887.4878 7999.6494 L
-7887.4878 8000.3682 L
-7902.9995 8000.3682 L
f
-7902.9995 8010.6328 m
-7902.9995 8009.9121 L
-7887.4878 8009.9121 L
-7887.4878 8010.6328 L
-7902.9995 8010.6328 L
f
-7902.9995 8008.4951 m
-7902.9995 8007.4141 L
-7887.4878 8007.4141 L
-7887.4878 8008.4951 L
-7902.9995 8008.4951 L
f
-7902.9995 8002.9395 m
-7902.9995 8001.8594 L
-7887.4878 8001.8594 L
-7887.4878 8002.9395 L
-7902.9995 8002.9395 L
f
-7902.9995 8005.9854 m
-7902.9995 8004.334 L
-7887.4878 8004.334 L
-7887.4878 8005.9854 L
-7902.9995 8005.9854 L
f
*u
1 D
-7887.4888 8014.1455 m
-7902.9995 8014.1455 L
-7902.9995 8013.6816 L
-7902.6514 8013.6816 L
-7902.6514 8012.4844 L
-7902.9995 8012.4844 L
-7902.9995 8012.0215 L
-7887.4888 8012.0215 L
-7887.4888 8012.4844 L
-7887.8408 8012.4844 L
-7887.8408 8013.6846 L
-7887.4888 8013.6846 L
-7887.4888 8014.1455 L
f
0 D
-7899.1255 8013.6846 m
-7898.4199 8013.6846 L
-7898.4199 8012.4844 L
-7899.1255 8012.4844 L
-7899.1255 8013.6846 L
f
-7899.8306 8012.4844 m
-7900.5361 8012.4844 L
-7900.5361 8013.6846 L
-7899.8306 8013.6846 L
-7899.8306 8012.4844 L
f
-7897.7144 8013.6846 m
-7897.0098 8013.6846 L
-7897.0098 8012.4844 L
-7897.7144 8012.4844 L
-7897.7144 8013.6846 L
f
-7896.3042 8013.6846 m
-7895.5986 8013.6846 L
-7895.5986 8012.4844 L
-7896.3042 8012.4844 L
-7896.3042 8013.6846 L
f
-7894.8936 8013.6846 m
-7894.1885 8013.6846 L
-7894.1885 8012.4844 L
-7894.8936 8012.4844 L
-7894.8936 8013.6846 L
f
-7893.4834 8013.6846 m
-7892.7778 8013.6846 L
-7892.7778 8012.4844 L
-7893.4834 8012.4844 L
-7893.4834 8013.6846 L
f
-7892.0718 8013.6846 m
-7891.3672 8013.6846 L
-7891.3672 8012.4844 L
-7892.0718 8012.4844 L
-7892.0718 8013.6846 L
f
-7890.6616 8013.6846 m
-7889.9575 8013.6846 L
-7889.9575 8012.4844 L
-7890.6616 8012.4844 L
-7890.6616 8013.6846 L
f
-7889.2515 8013.6846 m
-7888.5454 8013.6846 L
-7888.5454 8012.4844 L
-7889.2515 8012.4844 L
-7889.2515 8013.6846 L
f
-7901.9463 8013.6846 m
-7901.2407 8013.6846 L
-7901.2407 8012.4844 L
-7901.9463 8012.4844 L
-7901.9463 8013.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7903 8046.998 m
-7903 7988.0225 L
-7844.0254 7988.0225 L
-7844.0254 8046.998 L
-7903 8046.998 L
n
*u
1 D
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M-7876.4902 8006.4453 m
-7874.9678 8007.9678 -7875.5166 8010.9834 -7877.7153 8013.1836 c
-7879.9146 8015.3809 -7882.9302 8015.9297 -7884.4526 8014.4082 c
-7885.9751 8012.8857 -7885.4263 8009.8682 -7883.2271 8007.6709 c
-7881.0288 8005.4717 -7878.0127 8004.9238 -7876.4902 8006.4453 c
f
0 D
-7877.1519 8007.0781 m
-7878.5728 8005.6582 -7881.2241 8006.0059 -7883.0728 8007.8545 c
-7884.9214 8009.7031 -7885.2695 8012.3545 -7883.8486 8013.7754 c
-7882.4282 8015.1953 -7879.7769 8014.8486 -7877.9282 8013 c
-7876.0786 8011.1504 -7875.7314 8008.5 -7877.1519 8007.0781 c
f
*U
-7894.5327 7997.2607 m
-7893.7969 7997.1309 l
-7893.71 7996.4385 l
-7888.9458 8001.9814 l
-7894.5327 7997.2607 l
f
-7883.9409 7994.3145 m
-7884.1235 7992.7266 L
-7883.7002 7992.4512 -7883.3184 7992.1309 -7882.9346 7991.8145 C
-7882.6841 7994.9189 L
-7882.3535 7994.9453 L
-7882.4678 7991.4395 L
-7882.0503 7991.1162 -7881.6089 7990.8213 -7881.0913 7990.6152 C
-7881.1235 7995.7266 L
-7880.9063 7995.7734 L
-7880.5938 7990.4521 L
-7880.2007 7990.3516 -7879.7632 7990.3008 -7879.2642 7990.3213 C
-7880.0376 7999.4463 L
-7878.7666 7990.3594 L
-7878.3359 7990.4063 -7877.96 7990.4746 -7877.6289 7990.5625 C
-7878.4551 7997.334 L
-7878.2998 7997.2109 L
-7877.1465 7990.7148 L
-7876.7471 7990.8633 -7876.4238 7991.0449 -7876.1528 7991.25 C
-7876.7334 7996.0762 L
-7876.4688 7995.9414 L
-7875.7114 7991.6426 L
-7875.2256 7992.1494 -7874.9194 7992.7344 -7874.5127 7993.2822 C
-7875.0713 7995.3496 L
-7874.6001 7995.1709 L
-7874.1338 7993.7383 L
-7873.8096 7994.082 -7873.4063 7994.3945 -7872.8394 7994.6406 c
-7872.8506 7994.6357 -7871.7393 7994.6826 -7871.7466 7994.6533 c
-7871.7959 7994.4375 -7872.6655 7994.2998 -7872.6455 7994.3105 c
-7875.2974 7992.8965 -7874.3232 7990.3301 -7878.8735 7989.873 c
-7882.4072 7989.5176 -7883.2515 7992.75 -7886.0962 7993.0615 c
-7886.1152 7993.0625 -7886.7632 7993.3174 -7886.8442 7993.4502 C
-7886.8486 7993.625 -7886.4595 7993.5186 -7886.2417 7993.4766 c
-7885.6001 7993.3477 -7885.0498 7993.2402 -7884.5728 7992.9912 C
-7884.4023 7994.1914 L
-7883.9409 7994.3145 L
f
-7896.6626 8006.9463 m
-7898.2495 8006.7637 L
-7898.5254 8007.1865 -7898.8462 8007.5693 -7899.1626 8007.9521 C
-7896.0576 8008.2031 L
-7896.0322 8008.5352 L
-7899.5376 8008.4189 L
-7899.8608 8008.8369 -7900.1558 8009.2783 -7900.3618 8009.7959 C
-7895.2505 8009.7637 L
-7895.2031 8009.9814 L
-7900.5249 8010.293 L
-7900.6265 8010.6865 -7900.6758 8011.125 -7900.6558 8011.623 C
-7891.5298 8010.8496 L
-7900.6177 8012.1201 L
-7900.5713 8012.5498 -7900.5024 8012.9277 -7900.4146 8013.2578 C
-7893.6426 8012.4316 L
-7893.7656 8012.5869 L
-7900.2622 8013.7402 L
-7900.1138 8014.1406 -7899.9312 8014.4629 -7899.7271 8014.7344 C
-7894.9014 8014.1533 L
-7895.0352 8014.418 L
-7899.3335 8015.1768 L
-7898.8271 8015.6621 -7898.2417 8015.9688 -7897.6943 8016.375 C
-7895.6274 8015.8145 L
-7895.8066 8016.2871 L
-7897.2383 8016.752 L
-7896.8945 8017.0762 -7896.5825 8017.4814 -7896.3359 8018.0479 c
-7896.3408 8018.0361 -7896.2935 8019.1484 -7896.3242 8019.1416 c
-7896.54 8019.0908 -7896.6768 8018.2227 -7896.6675 8018.2412 c
-7898.0806 8015.5898 -7900.6475 8016.5645 -7901.1045 8012.0127 c
-7901.4595 8008.4805 -7898.2271 8007.6367 -7897.9165 8004.791 c
-7897.9136 8004.7725 -7897.6602 8004.125 -7897.5273 8004.043 C
-7897.3535 8004.0381 -7897.4575 8004.4277 -7897.5015 8004.6455 c
-7897.6294 8005.2871 -7897.7368 8005.8369 -7897.9858 8006.3145 C
-7896.7842 8006.4854 L
-7896.6626 8006.9463 L
f
-7867.0127 8005.2285 m
-7862.2495 8006.6348 -7860.9502 8008.9209 -7860.9746 8010.5654 C
-7860.5366 8007.459 -7858.6558 8009.8652 -7858.1313 8011.0029 C
-7859.0498 8007.416 -7856.4463 8010.5439 -7856.2715 8010.8496 C
-7857.2593 8007.4063 -7864.3955 8004.9404 -7867.0127 8005.2285 C
f
-7872.9775 8004.2197 m
-7876.3242 7998.1738 -7873.4233 7996.5703 -7872.7354 7996.377 c
-7872.9233 7996.4287 -7873.3135 7997.2949 -7873.2026 7997.6367 C
-7872.9482 7997.0928 -7872.4111 7996.8193 -7871.8994 7996.6094 C
-7873.1626 7997.6094 -7873.6943 8000.4111 -7872.9082 8003.9512 c
-7872.9775 8004.2197 l
f
-7875.2222 8004.5254 m
-7877.6035 8002.1016 -7879.0474 8001.2773 -7877.1035 7998.668 c
-7877.2202 7998.8262 -7877.3838 7999.7168 -7877.1758 8000.0117 C
-7877.0942 7999.418 -7876.6626 7998.998 -7876.2358 7998.6455 C
-7877.9395 8002.0732 -7875.2222 8004.5254 y
f
-7867.6577 8003.4199 m
-7867.9897 8001.5615 -7866.4922 8000.4688 -7864.8662 7999.8496 C
-7865.4194 7999.8662 -7866.0176 7999.9307 -7866.4482 8000.3496 C
-7866.4302 7999.9893 -7865.7598 7999.3184 -7865.5654 7999.3359 c
-7866.2778 7999.2744 -7868.4951 7998.8447 -7867.8408 8003.6191 c
-7867.6577 8003.4199 l
f
-7864.5576 8004.1133 m
-7864.1538 8002.7266 -7861.9502 8002.459 V
-7862.5342 8002.2871 -7863.2314 8002.3662 -7863.6626 8002.7852 C
-7863.6455 8002.4258 -7862.8408 8001.7178 -7862.6479 8001.7568 c
-7864.3921 8001.4141 -7864.6782 8003.9072 y
-7864.5576 8004.1133 l
f
-7861.1152 8005.3213 m
-7860.8408 8004.627 -7860.0942 8004.1201 -7859.2646 8004 C
-7859.6475 8003.8975 -7860.0854 8003.9873 -7860.4297 8004.3242 C
-7860.4175 8004.0352 -7859.7744 8003.4863 -7859.6182 8003.502 c
-7861.2729 8003.3496 -7861.1152 8005.3213 Y
f
-7870.5562 8003.4629 m
-7870.6504 8000.1309 -7869.4175 7998.4541 -7867.9761 7997.6514 C
-7868.5264 7997.7148 -7869.1162 7997.8271 -7869.5103 7998.2793 C
-7869.5249 7997.9189 -7868.9087 7997.1953 -7868.7134 7997.1973 c
-7869.4287 7997.1943 -7872.0034 7997.0898 -7870.7866 8003.7109 c
-7870.5562 8003.4629 l
f
-7885.7944 8024.0137 m
-7884.3882 8028.7754 -7882.1006 8030.0762 -7880.4575 8030.0518 C
-7883.5635 8030.4893 -7881.1567 8032.3701 -7880.0195 8032.8945 C
-7883.6074 8031.9766 -7880.4795 8034.5791 -7880.1729 8034.7549 C
-7883.6162 8033.7676 -7886.0825 8026.6309 -7885.7944 8024.0137 C
f
-7886.8022 8018.0488 m
-7892.8481 8014.7002 -7894.4521 8017.6025 -7894.6465 8018.291 c
-7894.5938 8018.1025 -7893.7295 8017.7119 -7893.3857 8017.8242 C
-7893.9297 8018.0781 -7894.2017 8018.6152 -7894.4126 8019.127 C
-7893.4126 8017.8633 -7890.6113 8017.334 -7887.0703 8018.1182 c
-7886.8022 8018.0488 l
f
-7886.4966 8015.8037 m
-7888.9214 8013.4229 -7889.7446 8011.9805 -7892.3535 8013.9229 c
-7892.1968 8013.8066 -7891.3057 8013.6426 -7891.0112 8013.8496 C
-7891.6064 8013.9307 -7892.0239 8014.3633 -7892.3774 8014.79 C
-7888.9487 8013.0879 -7886.4966 8015.8037 y
f
-7887.6025 8023.3682 m
-7889.4614 8023.0361 -7890.5537 8024.5342 -7891.1729 8026.1602 C
-7891.1558 8025.6074 -7891.0918 8025.0098 -7890.6719 8024.5791 C
-7891.0327 8024.5957 -7891.7041 8025.2656 -7891.6865 8025.4609 c
-7891.7485 8024.75 -7892.1777 8022.5313 -7887.4038 8023.1846 c
-7887.6025 8023.3682 l
f
-7886.9087 8026.4688 m
-7888.2959 8026.873 -7888.5649 8029.0762 V
-7888.7354 8028.4922 -7888.6558 8027.7949 -7888.2368 8027.3633 C
-7888.5967 8027.3809 -7889.3042 8028.1865 -7889.2666 8028.3789 c
-7889.6079 8026.6348 -7887.1152 8026.3477 y
-7886.9087 8026.4688 l
f
-7885.7007 8029.9111 m
-7886.3955 8030.1846 -7886.9009 8030.9307 -7887.0234 8031.7617 C
-7887.1265 8031.3789 -7887.0337 8030.9404 -7886.6982 8030.5967 C
-7886.9873 8030.6104 -7887.5361 8031.252 -7887.5215 8031.4082 c
-7887.6729 8029.7529 -7885.7007 8029.9111 Y
f
-7887.5591 8020.4697 m
-7890.8921 8020.377 -7892.5679 8021.6094 -7893.3696 8023.0508 C
-7893.3081 8022.502 -7893.1953 8021.9102 -7892.7422 8021.5146 C
-7893.1035 8021.5029 -7893.8262 8022.1162 -7893.8257 8022.3135 c
-7893.8286 8021.5967 -7893.9321 8019.0234 -7887.3115 8020.2402 c
-7887.5591 8020.4697 l
f
u
u
-7897.0234 7996.709 m
-7897.2856 7996.1953 -7897.0479 7995.6689 -7895.2905 7995.6504 C
-7896.0322 7994.9082 L
-7897.9927 7994.9941 -7898.3423 7996.1777 -7898.1665 7996.7578 c
-7897.9736 7997.3906 -7897.5488 7997.9023 -7897.2085 7998.25 C
-7898.2031 7998.6113 -7898.2505 7999.3916 -7898.0479 7999.79 c
-7897.7729 8000.334 -7897.2998 8000.752 -7896.9487 8001.0176 C
-7897.9448 8001.377 -7897.8623 8002.1133 -7897.6074 8002.457 c
-7897.2856 8002.8906 -7896.8174 8003.2031 -7896.4751 8003.4023 C
-7897.4585 8003.8301 -7897.3022 8004.5234 -7897.0239 8004.8154 c
-7896.6929 8005.166 -7896.2466 8005.3916 -7895.9199 8005.5322 C
-7896.7695 8006.0225 -7896.5537 8006.6318 -7896.2715 8006.8633 c
-7895.9458 8007.1318 -7895.5342 8007.2842 -7895.23 8007.377 C
-7895.9395 8007.9082 -7895.6802 8008.4297 -7895.4014 8008.6074 c
-7895.0698 8008.8174 -7894.6714 8008.9082 -7894.3857 8008.9541 C
-7894.9673 8009.5098 -7894.6768 8009.9482 -7894.4097 8010.0762 c
-7893.9326 8010.3037 -7893.3511 8010.2764 -7893.1768 8010.2813 c
-7892.6343 8010.2959 -7891.8838 8010.125 -7891.4272 8010.0703 c
-7890.3442 8009.9434 -7886.5718 8009.2754 -7884.9023 8009.4385 C
-7885.1704 8009.2285 -7885.1714 8009.2285 v
-7887.1304 8009.041 -7890.0479 8009.4678 -7891.1294 8009.5957 c
-7891.9839 8009.6953 -7893.1182 8009.9951 -7893.9951 8009.7295 c
-7894.2593 8009.6494 -7894.3696 8009.4453 -7893.8906 8009.0215 C
-7893.3135 8009.0732 -7892.5737 8009.002 -7892.1118 8009.0039 c
-7890.9009 8009.0098 -7886.6504 8008.7832 -7884.8311 8009.1895 C
-7885.0986 8008.9209 -7885.0986 8008.9199 v
-7887.2344 8008.4492 -7890.5098 8008.5254 -7891.7202 8008.5186 c
-7892.6758 8008.5137 -7893.9673 8008.6914 -7894.8984 8008.2783 c
-7895.1777 8008.1563 -7895.2729 8007.918 -7894.6953 8007.5166 C
-7894.0615 8007.6602 -7893.2153 8007.6816 -7892.6968 8007.7471 c
-7891.3623 8007.918 -7886.6431 8008.2441 -7884.6929 8008.9375 C
-7884.9502 8008.6064 -7884.9512 8008.6064 v
-7887.2422 8007.7969 -7890.8647 8007.4375 -7892.1992 8007.2656 c
-7893.2529 8007.1309 -7894.7007 8007.1504 -7895.6719 8006.5703 c
-7895.9624 8006.3975 -7896.0352 8006.123 -7895.3481 8005.7578 C
-7894.6704 8005.998 -7893.7578 8006.1328 -7893.2026 8006.2754 c
-7891.7534 8006.6445 -7886.5938 8007.6426 -7884.5361 8008.6689 C
-7884.7754 8008.2695 -7884.7759 8008.2695 v
-7887.1934 8007.0664 -7891.1392 8006.1797 -7892.5879 8005.8105 c
-7893.7314 8005.5186 -7895.3311 8005.3457 -7896.3242 8004.5723 c
-7896.6182 8004.3457 -7896.6626 8004.0352 -7895.8745 8003.7305 C
-7895.1606 8004.082 -7894.1802 8004.3535 -7893.5889 8004.584 c
-7892.0415 8005.1865 -7886.4863 8006.9863 -7884.3564 8008.3984 C
-7884.5654 8007.9258 -7884.5674 8007.9248 v
-7887.0698 8006.2695 -7891.3018 8004.7578 -7892.8486 8004.1543 c
-7894.0703 8003.6777 -7895.8115 8003.2695 -7896.8018 8002.2842 c
-7897.0786 8002.0098 -7897.1006 8001.6846 -7896.3384 8001.4551 C
-7895.5942 8001.9404 -7894.5234 8002.3584 -7893.8926 8002.6895 c
-7892.2446 8003.5518 -7886.2441 8006.2246 -7884.1055 8008.0957 C
-7884.2407 8007.5186 -7884.2417 8007.5186 v
-7886.7559 8005.3281 -7891.2954 8003.127 -7892.9438 8002.2617 c
-7894.2456 8001.5801 -7896.1602 8000.9248 -7897.0815 7999.6709 c
-7897.3135 7999.3555 -7897.2974 7999.0127 -7896.6118 7998.8105 C
-7895.8594 7999.4668 -7894.6641 8000.0762 -7893.9888 8000.5322 c
-7892.27 8001.6953 -7885.9126 8005.377 -7883.8442 8007.7637 C
-7884.1377 8006.9902 -7884.1382 8006.9893 v
-7886.5718 8004.1934 -7891.0825 8001.2842 -7892.8018 8000.1221 c
-7894.1582 7999.2031 -7896.2295 7998.2607 -7897.0234 7996.709 c
f
U
u
-7894.2329 7993.918 m
-7894.7446 7993.6543 -7895.2715 7993.8926 -7895.2905 7995.6504 C
-7896.0313 7994.9082 L
-7895.9473 7992.9473 -7894.7622 7992.5977 -7894.1826 7992.7754 c
-7893.5503 7992.9658 -7893.0386 7993.3916 -7892.6919 7993.7324 C
-7892.3306 7992.7373 -7891.5498 7992.6904 -7891.1504 7992.8906 c
-7890.6064 7993.168 -7890.1895 7993.6406 -7889.9224 7993.9922 C
-7889.5649 7992.9951 -7888.8281 7993.0781 -7888.4834 7993.334 c
-7888.0498 7993.6543 -7887.7368 7994.123 -7887.5376 7994.4648 C
-7887.1113 7993.4824 -7886.4175 7993.6387 -7886.1255 7993.918 c
-7885.7759 7994.248 -7885.5488 7994.6943 -7885.4082 7995.0215 C
-7884.9185 7994.1719 -7884.3086 7994.3877 -7884.0767 7994.6689 c
-7883.8086 7994.9951 -7883.6553 7995.4053 -7883.5649 7995.7109 C
-7883.0327 7995.002 -7882.5103 7995.2607 -7882.3345 7995.5391 c
-7882.1235 7995.8701 -7882.0322 7996.2695 -7881.9858 7996.5537 C
-7881.4312 7995.9727 -7880.9912 7996.2637 -7880.8638 7996.5313 c
-7880.6367 7997.0078 -7880.6655 7997.5898 -7880.6592 7997.7637 c
-7880.6431 7998.3066 -7880.8159 7999.0566 -7880.8696 7999.5137 c
-7880.9966 8000.5957 -7881.6655 8004.3682 -7881.5034 8006.0381 C
-7881.7129 8005.7695 l
-7881.8999 8003.8105 -7881.4727 8000.8926 -7881.3457 7999.8105 c
-7881.2446 7998.957 -7880.9458 7997.8223 -7881.2114 7996.9453 c
-7881.2915 7996.6816 -7881.4946 7996.5703 -7881.9199 7997.0508 C
-7881.8682 7997.6279 -7881.9395 7998.3662 -7881.9375 7998.8281 c
-7881.9302 8000.04 -7882.1567 8004.29 -7881.7524 8006.1094 C
-7882.0195 8005.8428 -7882.0195 8005.8418 v
-7882.4922 8003.7061 -7882.4155 8000.4316 -7882.4214 7999.2207 c
-7882.4272 7998.2646 -7882.25 7996.9736 -7882.6616 7996.043 c
-7882.7847 7995.7637 -7883.0234 7995.668 -7883.4238 7996.2461 C
-7883.2798 7996.8789 -7883.2593 7997.7246 -7883.1929 7998.2441 c
-7883.0225 7999.5781 -7882.6958 8004.2959 -7882.0034 8006.248 C
-7882.3345 8005.9902 -7882.3354 8005.9893 v
-7883.1455 8003.6982 -7883.5039 8000.0762 -7883.6753 7998.7402 c
-7883.8096 7997.6885 -7883.79 7996.2402 -7884.3706 7995.2695 c
-7884.5435 7994.9785 -7884.8174 7994.9053 -7885.1816 7995.5938 C
-7884.9434 7996.2695 -7884.8081 7997.1836 -7884.6665 7997.7383 c
-7884.2969 7999.1865 -7883.2993 8004.3477 -7882.27 8006.4053 C
-7882.6704 8006.166 -7882.6714 8006.166 v
-7883.8745 8003.7471 -7884.7607 7999.8008 -7885.1294 7998.3535 c
-7885.4214 7997.209 -7885.5962 7995.6094 -7886.3662 7994.6172 c
-7886.5962 7994.3232 -7886.9058 7994.2783 -7887.2114 7995.0664 C
-7886.8594 7995.7793 -7886.5874 7996.7617 -7886.3574 7997.3516 c
-7885.7534 7998.8984 -7883.9546 8004.4541 -7882.5415 8006.585 C
-7883.0161 8006.375 l
-7884.6704 8003.8711 -7886.1826 7999.6387 -7886.7866 7998.0918 c
-7887.2622 7996.8701 -7887.6714 7995.1289 -7888.6558 7994.1387 c
-7888.9312 7993.8623 -7889.2559 7993.8398 -7889.4858 7994.6016 C
-7889.0015 7995.3457 -7888.5825 7996.418 -7888.2529 7997.0469 c
-7887.3887 7998.6953 -7884.7158 8004.6973 -7882.8447 8006.8359 C
-7883.4209 8006.6992 -7883.4214 8006.6992 v
-7885.6128 8004.1846 -7887.8145 7999.6455 -7888.6782 7997.9961 c
-7889.3599 7996.6943 -7890.0161 7994.7793 -7891.2695 7993.8594 c
-7891.5854 7993.627 -7891.9272 7993.6426 -7892.1313 7994.3281 C
-7891.4736 7995.082 -7890.8638 7996.2764 -7890.4072 7996.9512 c
-7889.2441 7998.6709 -7885.5635 8005.0273 -7883.1768 8007.0967 C
-7883.9502 8006.8037 -7883.9512 8006.8018 v
-7886.7471 8004.3682 -7889.6558 7999.8584 -7890.8184 7998.1387 c
-7891.7368 7996.7822 -7892.6802 7994.7119 -7894.2329 7993.918 c
f
U
U
*u
1 D
-7844.0264 7998.0566 m
-7850.5264 7998.0566 L
-7850.1826 7998.4189 -7849.7622 7998.7578 -7849.1777 7999.0332 c
-7849.1978 7999.0234 -7848.3994 7999.1563 -7848.2622 7999.332 c
-7848.0967 7999.541 -7849.7886 7999.582 -7850.6929 7998.5342 C
-7851.3486 8001.709 L
-7851.8135 8002.0273 L
-7851.0918 7998.0977 L
-7851.5249 7997.5703 -7851.8594 7997.002 -7852.3687 7996.5186 C
-7853.0337 8002.6289 L
-7853.29 8002.7754 L
-7852.8286 7996.1475 L
-7853.1104 7995.957 -7853.4424 7995.791 -7853.8486 7995.6621 C
-7854.7119 8003.0225 L
-7854.9482 8003.0078 L
-7854.3369 7995.5322 L
-7854.6729 7995.4609 -7855.0518 7995.4111 -7855.4834 7995.3857 C
-7856.0303 8002.9541 L
-7856.1992 8002.9521 L
-7855.9814 7995.3711 L
-7856.4814 7995.377 -7856.9175 7995.4473 -7857.3042 7995.5674 C
-7857.4155 8002.7061 L
-7857.6338 8002.6689 L
-7857.7935 7995.7549 L
-7858.2998 7995.9863 -7858.7266 7996.3018 -7859.1279 7996.6455 C
-7859.0454 8002.2412 L
-7859.3774 8002.0273 L
-7859.5752 7997.043 L
-7859.9434 7997.377 -7860.3096 7997.7168 -7860.7178 7998.0127 C
-7860.7217 8001.3389 L
-7861.1455 8001.0645 L
-7861.1553 7998.2988 L
-7861.6191 7998.5693 -7862.5854 7999.0098 -7863.4014 7998.8672 C
-7862.1714 7998.543 -7861.7925 7998.3301 -7861.5034 7998.0566 C
-7864.7295 7998.0566 L
-7860.8955 8002.4512 -7854.3394 8006.6865 -7849.3018 8000.0225 C
-7849.1807 7999.8838 -7848.8174 7999.5625 -7848.1255 7999.6475 C
-7844.0264 7999.6475 L
-7844.0264 8000.3672 L
-7847.4834 8000.3672 L
-7847.1318 8000.6777 -7846.8223 8001.4863 -7847.0386 8001.8574 C
-7844.0264 8001.8574 L
-7844.0264 8002.9385 L
-7847.1689 8002.9385 L
-7847.2935 8003.4492 -7847.5439 8003.8857 -7847.8218 8004.3311 C
-7844.0264 8004.3311 L
-7844.0264 8005.9873 L
-7848.7354 8005.9873 L
-7848.9424 8006.4453 -7849.1016 8006.9082 -7849.1768 8007.4121 C
-7844.0264 8007.4121 L
-7844.0264 8008.4922 L
-7849.1714 8008.4922 L
-7849.1074 8008.9834 -7848.9614 8009.4668 -7848.7378 8009.9111 C
-7844.0264 8009.9111 L
-7844.0264 8010.6309 L
-7848.2744 8010.6309 L
-7847.9375 8011.0039 -7846.8535 8011.5938 -7846.9375 8012.0225 C
-7844.0239 8012.0225 L
-7844.0239 8012.4824 L
-7844.3721 8012.4824 L
-7844.3721 8013.6826 L
-7844.0239 8013.6826 L
-7844.0239 8014.1426 L
-7851.9736 8014.1426 L
-7852.4082 8014.4375 -7853.2192 8014.4521 -7853.9897 8014.1426 C
-7857.8564 8014.1426 L
-7858.1162 8014.4609 -7859.1807 8014.5693 -7859.6846 8014.1426 C
-7860.8232 8014.1426 L
-7861.0439 8014.3994 -7861.3174 8014.6387 -7861.6782 8014.8975 C
-7844.0264 8014.8975 L
-7844.0264 8015.3809 L
-7862.8394 8015.3809 L
-7863.1982 8015.5615 -7864.2417 8015.8389 -7865.3774 8015.3809 C
-7875.6406 8015.3809 L
-7875.6406 8025.6494 L
-7875.1826 8026.7861 -7875.4614 8027.8281 -7875.6455 8028.1895 C
-7875.6455 8047 L
-7876.1279 8047 L
-7876.1279 8029.3477 L
-7876.3838 8029.709 -7876.6235 8029.9824 -7876.8794 8030.2031 C
-7876.8794 8031.3418 L
-7876.4536 8031.8457 -7876.5615 8032.9082 -7876.8794 8033.1689 C
-7876.8794 8037.0361 L
-7876.5698 8037.8076 -7876.5854 8038.6182 -7876.8833 8039.0518 C
-7876.8833 8046.998 L
-7877.3394 8046.998 L
-7877.3394 8046.6543 L
-7878.5435 8046.6543 L
-7878.5435 8046.998 L
-7879.0039 8046.998 L
-7879.0039 8044.0879 L
-7879.4287 8044.1738 -7880.0186 8043.0898 -7880.3955 8042.752 C
-7880.3955 8046.9951 L
-7881.1113 8046.9951 L
-7881.1113 8042.2891 L
-7881.5552 8042.0654 -7882.0376 8041.9189 -7882.5298 8041.8555 C
-7882.5298 8046.9951 L
-7883.6138 8046.9951 L
-7883.6138 8041.8496 L
-7884.1143 8041.9248 -7884.5767 8042.085 -7885.0391 8042.29 C
-7885.0391 8046.9951 L
-7886.6958 8046.9951 L
-7886.6958 8043.2041 L
-7887.1362 8043.4824 -7887.5728 8043.7324 -7888.0854 8043.8555 C
-7888.0854 8046.9951 L
-7889.1689 8046.9951 L
-7889.1689 8043.9893 L
-7889.5552 8044.1289 -7890.3486 8043.8945 -7890.6543 8043.543 C
-7890.6543 8046.9951 L
-7891.3794 8046.9951 L
-7891.3794 8042.9014 L
-7891.4634 8042.209 -7891.1382 8041.8457 -7891.0015 8041.7227 C
-7884.3359 8036.6885 -7888.5713 8030.1309 -7892.9658 8026.2959 C
-7892.9658 8029.5244 L
-7892.6919 8029.2344 -7892.48 8028.8555 -7892.1558 8027.625 C
-7892.0127 8028.4414 -7892.4526 8029.4082 -7892.7246 8029.8711 C
-7889.9575 8029.8828 L
-7889.6831 8030.3047 L
-7893.0103 8030.3066 L
-7893.3066 8030.7168 -7893.6455 8031.084 -7893.98 8031.4512 C
-7888.9951 8031.6475 L
-7888.7817 8031.9814 L
-7894.3774 8031.8984 L
-7894.7202 8032.2998 -7895.0361 8032.7266 -7895.2681 8033.2314 C
-7888.3535 8033.3926 L
-7888.3169 8033.6113 L
-7895.4546 8033.7227 L
-7895.5742 8034.1094 -7895.6465 8034.5439 -7895.6514 8035.0449 C
-7888.0688 8034.8262 L
-7888.0688 8034.9951 L
-7895.6362 8035.543 L
-7895.6113 8035.9746 -7895.5615 8036.3545 -7895.4888 8036.6895 C
-7888.0142 8036.0781 L
-7887.9995 8036.3145 L
-7895.3599 8037.1777 L
-7895.2314 8037.585 -7895.0654 8037.916 -7894.8755 8038.1973 C
-7888.2485 8037.7354 L
-7888.3945 8037.9932 L
-7894.5034 8038.6572 L
-7894.0215 8039.168 -7893.4521 8039.502 -7892.9238 8039.9336 C
-7888.9946 8039.2139 L
-7889.3135 8039.6768 L
-7892.4878 8040.334 L
-7891.4409 8041.2373 -7891.4814 8042.9297 -7891.6914 8042.7637 c
-7891.8657 8042.627 -7891.9985 8041.8281 -7891.9897 8041.8486 c
-7892.2656 8041.2637 -7892.6035 8040.8438 -7892.9697 8040.502 C
-7892.9697 8047 L
-7893.4536 8047 L
-7893.4536 8040.085 L
-7894.6582 8039.1377 -7895.9551 8038.5674 -7896.1167 8035.4111 c
-7896.25 8032.8311 -7894.5562 8031.7656 -7893.4497 8030.2871 C
-7893.4497 8025.7441 L
-7894.5767 8024.418 -7895.5225 8022.9912 -7895.9614 8021.1455 C
-7896.8809 8016.3662 -7893.7568 8010.8545 -7888.7959 8010.4863 C
-7888.7183 8010.6133 L
-7893.1494 8011.5352 -7895.8442 8016.6641 -7894.9814 8021.1455 C
-7894.0635 8025.0029 -7890.9395 8027.0234 -7888.5503 8030.1475 C
-7886.8975 8032.5361 -7886.3457 8035.1094 -7887.0806 8037.8652 c
-7887.8545 8040.6133 -7890.25 8041.5977 -7890.5649 8042.5303 c
-7890.8506 8043.375 -7889.6689 8043.7002 -7888.6968 8043.6348 C
-7886.5454 8043.4395 -7885.1602 8040.4922 -7881.3184 8041.7559 c
-7880.2222 8042.1162 -7879.5913 8042.9375 -7879.3042 8043.5469 c
-7879.1104 8043.957 -7877.7241 8043.4395 -7878.9165 8041.2207 C
-7881.8774 8041.0879 -7881.4521 8039.0645 -7881.2026 8039.2109 c
-7879.5015 8040.209 -7878.1826 8038.3047 -7879.1055 8037.2959 c
-7881.2129 8034.9902 -7882.8481 8035.2861 -7884.9248 8031.3174 c
-7887.2095 8026.9521 -7888.2695 8021.0723 -7885.7959 8016.9082 C
-7885.7954 8016.1387 L
-7886.0479 8015.5439 -7886.0249 8015.085 -7886.2134 8014.168 c
-7886.3818 8013.3535 -7886.6689 8013.085 -7886.9575 8012.9121 C
-7887.1304 8012.7969 -7887.5015 8012.9053 -7887.5054 8013.1445 c
-7887.52 8013.7461 -7886.7842 8013.5225 -7886.8271 8013.584 c
-7887.1895 8014.0869 -7887.7329 8013.7295 -7887.8345 8013.377 c
-7887.9648 8012.9287 -7887.6606 8012.5762 -7887.3145 8012.4902 C
-7886.6655 8012.3594 -7886.1968 8012.9277 -7885.9575 8013.457 c
-7885.4365 8014.6074 -7885.4746 8016.252 -7884.2607 8016.8574 c
-7883.4385 8017.2471 -7882.5537 8016.9277 -7881.7271 8016.6328 c
-7878.8296 8015.6016 -7875.3096 8012.082 -7874.2783 8009.1836 c
-7873.9834 8008.3574 -7873.6641 8007.4727 -7874.0537 8006.6494 c
-7874.6606 8005.4375 -7876.3042 8005.4746 -7877.4546 8004.9541 c
-7877.9834 8004.7148 -7878.5513 8004.2461 -7878.4214 8003.5967 C
-7878.3345 8003.25 -7877.9824 8002.9473 -7877.5327 8003.0762 c
-7877.1826 8003.1797 -7876.8242 8003.7227 -7877.3281 8004.084 c
-7877.3882 8004.127 -7877.1655 8003.3906 -7877.7681 8003.4053 c
-7878.0054 8003.4111 -7878.1143 8003.7813 -7877.9995 8003.9541 C
-7877.8257 8004.2422 -7877.5591 8004.5293 -7876.7422 8004.6973 c
-7875.7085 8004.9102 -7875.2578 8004.8535 -7874.5386 8005.2266 C
-7874.1167 8005.2266 L
-7869.9546 8002.7529 -7864.0674 8003.8008 -7859.7095 8006.0977 c
-7859.0527 8006.4551 -7858.4834 8006.8008 -7857.9126 8007.1475 c
-7856.5488 8007.9766 -7854.5542 8010.8857 Y
-7854.1782 8011.332 -7853.9521 8011.7979 -7853.5225 8012.0625 c
-7852.3569 8012.7783 -7850.8184 8011.5215 -7851.8154 8009.8193 c
-7851.9614 8009.5703 -7849.9385 8009.1455 -7849.8057 8012.1064 C
-7847.5874 8013.2988 -7847.0698 8011.9121 -7847.4795 8011.7178 c
-7848.0889 8011.4316 -7848.9087 8010.7998 -7849.2705 8009.7041 c
-7850.5342 8005.8623 -7847.3599 8004.0234 -7847.4463 8002.3262 C
-7847.3008 8001.5322 -7847.6514 8000.1719 -7848.4961 8000.459 c
-7849.4282 8000.7725 -7850.4126 8003.168 -7853.1606 8003.9414 c
-7855.9175 8004.6768 -7858.4897 8004.125 -7860.8774 8002.4717 C
-7864.0034 8000.084 -7866.0234 7996.959 -7869.8818 7996.041 C
-7874.3623 7995.1777 -7879.4902 7997.873 -7880.4126 8002.3037 C
-7880.5391 8002.2266 L
-7880.1729 7997.2656 -7874.6592 7994.1426 -7869.8818 7995.0615 C
-7868.0361 7995.502 -7866.6104 7996.4453 -7865.2822 7997.5723 C
-7860.7393 7997.5723 L
-7859.2607 7996.4668 -7858.1943 7994.7725 -7855.6143 7994.9053 c
-7852.4585 7995.0664 -7851.8882 7996.3633 -7850.9409 7997.5723 C
-7844.0264 7997.5723 L
-7844.0264 7998.0566 L
f
0 D
-7873.1362 8007.4121 m
-7865.5166 8007.4121 L
-7866.5635 8006.8301 -7867.5435 8006.3184 -7868.8057 8005.9873 C
-7873.6079 8005.9873 L
-7873.2998 8006.3809 -7873.1055 8006.8701 -7873.1362 8007.4121 C
f
-7874.0591 8009.9111 m
-7862.5254 8009.9111 L
-7862.6338 8009.6201 -7863.0063 8008.9404 -7863.8042 8008.4922 C
-7873.4321 8008.4922 L
-7873.6118 8008.9727 -7873.8232 8009.4463 -7874.0591 8009.9111 C
f
-7862.8096 8012.0225 m
-7862.3174 8011.4395 -7862.2568 8011.2207 -7862.3857 8010.6309 C
-7874.4521 8010.6309 L
-7874.7295 8011.1074 -7875.0322 8011.5723 -7875.3599 8012.0225 C
-7867.2568 8012.0225 L
-7866.9111 8011.2041 -7866.1665 8011.3711 -7865.8218 8012.0225 C
-7862.8096 8012.0225 L
f
-7864.1201 8012.4824 m
-7864.1201 8012.8242 L
-7863.5664 8012.7861 -7863.4995 8012.752 -7863.1982 8012.4824 C
-7864.1201 8012.4824 L
f
-7865.4863 8012.4824 m
-7865.3311 8012.6719 -7865.0264 8012.8154 -7864.8257 8012.8457 C
-7864.8257 8012.4824 L
-7865.4863 8012.4824 L
f
-7868.3535 8012.4824 m
-7868.3535 8013.6826 L
-7867.6465 8013.6826 L
-7867.6465 8012.4824 L
-7868.3535 8012.4824 L
f
-7869.7622 8012.4824 m
-7869.7622 8013.6826 L
-7869.0576 8013.6826 L
-7869.0576 8012.4824 L
-7869.7622 8012.4824 L
f
-7871.1729 8012.4824 m
-7871.1729 8013.6826 L
-7870.4678 8013.6826 L
-7870.4678 8012.4824 L
-7871.1729 8012.4824 L
f
-7872.5835 8012.4824 m
-7872.5835 8013.6826 L
-7871.8774 8013.6826 L
-7871.8774 8012.4824 L
-7872.5835 8012.4824 L
f
-7873.9946 8012.4824 m
-7873.9946 8013.6826 L
-7873.2886 8013.6826 L
-7873.2886 8012.4824 L
-7873.9946 8012.4824 L
f
-7879 8023.7695 m
-7879 8015.6504 L
-7879.4497 8015.9756 -7879.9146 8016.2754 -7880.3911 8016.5449 C
-7880.3911 8028.6406 L
-7879.8018 8028.7695 -7879.5825 8028.709 -7879 8028.2158 C
-7879 8025.2041 L
-7879.6514 8024.8613 -7879.8169 8024.1152 -7879 8023.7695 C
f
-7878.5391 8023.3799 m
-7877.3394 8023.3799 L
-7877.3394 8022.6748 L
-7878.5391 8022.6748 L
-7878.5391 8023.3799 L
f
-7877.3394 8021.9688 m
-7877.3394 8021.2637 L
-7878.5391 8021.2637 L
-7878.5391 8021.9688 L
-7877.3394 8021.9688 L
f
-7877.3394 8020.5586 m
-7877.3394 8019.8535 L
-7878.5391 8019.8535 L
-7878.5391 8020.5586 L
-7877.3394 8020.5586 L
f
-7877.3394 8019.1484 m
-7877.3394 8018.4434 L
-7878.5391 8018.4434 L
-7878.5391 8019.1484 L
-7877.3394 8019.1484 L
f
-7877.3394 8017.7373 m
-7877.3394 8017.0313 L
-7878.5391 8017.0313 L
-7878.5391 8017.7373 L
-7877.3394 8017.7373 L
f
-7877.3394 8016.3262 m
-7877.3394 8015.6201 L
-7878.5391 8015.6201 L
-7878.5391 8016.3262 L
-7877.3394 8016.3262 L
f
-7877.3394 8014.918 m
-7877.3394 8014.2725 L
-7877.5728 8014.4941 -7877.8135 8014.709 -7878.0591 8014.918 C
-7877.3394 8014.918 L
f
-7875.4058 8013.6826 m
-7874.6992 8013.6826 L
-7874.6992 8012.4824 L
-7875.4058 8012.4824 L
-7875.4058 8013.6826 L
f
-7876.7495 8013.6826 m
-7876.1094 8013.6826 L
-7876.1094 8012.9746 L
-7876.3159 8013.2158 -7876.5288 8013.4521 -7876.7495 8013.6826 C
f
-7882.5298 8017.5273 m
-7882.5298 8027.2227 L
-7882.0815 8028.0186 -7881.4014 8028.3926 -7881.1113 8028.502 C
-7881.1113 8016.9258 L
-7881.5762 8017.1563 -7882.0488 8017.3564 -7882.5298 8017.5273 C
f
-7885.0352 8017.209 m
-7885.0352 8022.2207 L
-7884.7041 8023.4844 -7884.1929 8024.4629 -7883.6094 8025.5098 C
-7883.6094 8017.7725 L
-7884.1606 8017.7705 -7884.6494 8017.5439 -7885.0352 8017.209 C
f
-7877.3394 8045.2441 m
-7878.5391 8045.2441 L
-7878.5391 8045.9482 L
-7877.3394 8045.9482 L
-7877.3394 8045.2441 L
f
-7877.3394 8043.834 m
-7878.3896 8043.834 L
-7878.4375 8043.8838 -7878.4878 8043.9297 -7878.5391 8043.9678 C
-7878.5391 8044.5381 L
-7877.3394 8044.5381 L
-7877.3394 8043.834 L
f
-7877.3394 8042.4209 m
-7878.0039 8042.4209 L
-7877.9702 8042.6475 -7877.9595 8042.9121 -7878.0137 8043.1279 C
-7877.3394 8043.1279 L
-7877.3394 8042.4209 L
f
-7877.3394 8041.0117 m
-7878.5015 8041.0117 L
-7878.3872 8041.2461 -7878.2798 8041.4814 -7878.1919 8041.7168 C
-7877.3394 8041.7168 L
-7877.3394 8041.0117 L
f
-7877.3394 8039.9033 m
-7877.4614 8040.0625 -7877.5938 8040.2197 -7877.6753 8040.3066 C
-7877.3394 8040.3066 L
-7877.3394 8039.9033 L
f
-7877.4399 8024.4395 m
-7877.6968 8024.2891 -7879.0845 8023.8135 -7879.0737 8024.5381 c
-7879.0674 8024.9502 -7878.4512 8025.2412 -7878.2495 8025.4473 c
-7877.6338 8026.0703 -7877.1885 8027.5254 -7878.2974 8028.4238 c
-7880.6328 8030.3145 -7882.1865 8028.5879 Y
-7886.1118 8024.7324 -7886.1104 8019.1113 Y
-7887.2295 8023.334 -7885.9663 8028.3936 -7884.4048 8031.1426 c
-7881.8818 8035.584 -7880.9575 8034.0566 -7878.6113 8036.9482 c
-7877.8047 8037.9434 -7878.1294 8040.3818 -7880.9546 8039.75 c
-7881.2026 8039.6934 -7880.7759 8040.2949 -7880.2681 8040.5498 c
-7878.1104 8041.6406 -7876.8618 8039.1631 -7877.1338 8037.8594 c
-7877.4761 8036.2109 -7878.0986 8035.3662 -7880.1616 8034.2246 C
-7879.8311 8034.2373 -7878.2134 8034.541 -7877.2295 8033.0088 c
-7877.0195 8032.6826 -7876.8745 8031.7578 -7877.3042 8031.877 c
-7877.3906 8031.9023 -7877.6416 8032.1973 -7877.9414 8032.3613 c
-7879.9321 8033.3945 -7880.7075 8031.0137 Y
-7878.4165 8030.8418 -7877.7515 8030.7637 -7876.2559 8028.7637 c
-7876.0542 8028.4941 -7875.1162 8025.8047 -7877.4399 8024.4395 c
f
-7878.5391 8031.1367 m
-7878.5391 8032.0225 L
-7878.2993 8031.998 -7877.9302 8031.957 -7877.3394 8031.4033 C
-7877.3394 8031.1367 L
-7878.5391 8031.1367 L
f
-7879.9946 8031.2305 m
-7879.8042 8031.7031 -7879.4185 8031.9473 -7879 8032.0127 C
-7879 8031.1709 L
-7879.3857 8031.2354 -7879.9946 8031.2305 Y
f
-7877.3394 8034.666 m
-7877.3394 8033.959 L
-7877.6382 8033.959 L
-7877.9136 8034.1475 -7878.2246 8034.293 -7878.5391 8034.3818 C
-7878.5391 8034.666 L
-7877.3394 8034.666 L
f
-7877.9897 8035.3682 m
-7877.7935 8035.5342 -7877.5576 8035.7813 -7877.3394 8036.1084 C
-7877.3394 8035.3682 L
-7877.9897 8035.3682 L
f
-7879.2495 8034.4746 m
-7879.1914 8034.5273 -7879.1025 8034.5967 -7879 8034.6719 C
-7879 8034.4668 L
-7879.0835 8034.4746 -7879.1675 8034.4785 -7879.2495 8034.4746 C
f
-7878.5391 8026.9063 m
-7878.5391 8027.8262 L
-7878.2715 8027.5273 -7878.2358 8027.46 -7878.1982 8026.9063 C
-7878.5391 8026.9063 L
f
-7878.1758 8026.2012 m
-7878.2065 8026.002 -7878.3506 8025.6943 -7878.5391 8025.54 C
-7878.5391 8026.2012 L
-7878.1758 8026.2012 L
f
-7866.1865 8014.8975 m
-7866.4233 8014.6943 -7866.6401 8014.4463 -7866.8271 8014.1426 C
-7876.8794 8014.1426 L
-7876.8794 8024.1992 L
-7876.5762 8024.3857 -7876.3271 8024.6025 -7876.1255 8024.8408 C
-7876.1265 8014.8975 L
-7866.1865 8014.8975 L
f
-7859.6226 8013.6826 m
-7859.0698 8013.0928 -7859.0298 8012.7227 -7859.0034 8012.4824 C
-7859.8887 8012.4824 L
-7859.8887 8013.6826 L
-7859.6226 8013.6826 L
f
-7859.8564 8012.0225 m
-7859.0127 8012.0225 L
-7859.0791 8011.6045 -7859.3232 8011.2188 -7859.7959 8011.0273 C
-7859.7915 8011.6367 -7859.8564 8012.0225 V
f
-7856.3623 8012.4824 m
-7856.6455 8012.4824 L
-7856.7334 8012.7979 -7856.8799 8013.1084 -7857.0674 8013.3838 C
-7857.0674 8013.6826 L
-7856.3623 8013.6826 L
-7856.3623 8012.4824 L
f
-7856.3545 8012.0225 m
-7856.4302 8011.9199 -7856.4995 8011.8311 -7856.5518 8011.7734 C
-7856.5479 8011.8555 -7856.5518 8011.9395 -7856.5601 8012.0225 C
-7856.3545 8012.0225 L
f
-7854.9185 8013.6826 m
-7855.2446 8013.4648 -7855.4912 8013.2305 -7855.6577 8013.0332 C
-7855.6577 8013.6826 L
-7854.9185 8013.6826 L
f
-7850.7202 8013.3477 m
-7850.8066 8013.4287 -7850.9639 8013.5615 -7851.1226 8013.6826 C
-7850.7202 8013.6826 L
-7850.7202 8013.3477 L
f
-7850.4751 8010.7549 m
-7850.7329 8010.2461 -7851.0913 8009.8945 -7851.2778 8010.0684 c
-7851.4248 8010.2041 -7850.4424 8011.9434 -7851.9009 8012.7725 c
-7852.7158 8013.2354 -7853.8721 8012.873 -7854.2842 8012.3066 c
-7856.5615 8009.1836 -7856.4746 8008.5586 -7859.8848 8006.6172 c
-7862.6318 8005.0537 -7867.6943 8003.793 -7871.9155 8004.9121 C
-7866.2935 8004.9102 -7862.4385 8008.8359 V
-7860.7119 8010.3906 -7862.6025 8012.7246 v
-7863.5015 8013.834 -7864.9551 8013.3887 -7865.5791 8012.7734 c
-7865.7842 8012.5703 -7866.0752 8011.9551 -7866.4873 8011.9482 c
-7867.2134 8011.9385 -7866.7378 8013.3242 -7866.5874 8013.582 c
-7865.2217 8015.9063 -7862.5322 8014.9678 -7862.2622 8014.7656 c
-7860.2622 8013.2705 -7860.1846 8012.6064 -7860.0127 8010.3145 C
-7857.6328 8011.0898 -7858.6655 8013.0801 v
-7858.8286 8013.3809 -7859.1245 8013.6318 -7859.1489 8013.7178 c
-7859.2695 8014.1475 -7858.3423 8014.0029 -7858.0176 8013.7949 c
-7856.4858 8012.8086 -7856.7881 8011.1914 -7856.8018 8010.8613 C
-7855.6602 8012.9248 -7854.8154 8013.5469 -7853.1675 8013.8887 c
-7851.8633 8014.1602 -7849.3857 8012.9121 -7850.4751 8010.7549 c
f
-7849.3096 8012.8301 m
-7849.5454 8012.7422 -7849.7817 8012.6357 -7850.0142 8012.5215 C
-7850.0142 8013.6826 L
-7849.3096 8013.6826 L
-7849.3096 8012.8301 L
f
-7847.8994 8013.0088 m
-7848.1143 8013.0625 -7848.3794 8013.0518 -7848.6055 8013.0186 C
-7848.6055 8013.6826 L
-7847.8994 8013.6826 L
-7847.8994 8013.0088 L
f
-7845.7822 8013.6826 m
-7845.0767 8013.6826 L
-7845.0767 8012.4824 L
-7845.7822 8012.4824 L
-7845.7822 8013.6826 L
f
-7847.1934 8013.6826 m
-7846.4878 8013.6826 L
-7846.4878 8012.4824 L
-7847.0586 8012.4824 L
-7847.0967 8012.5342 -7847.1426 8012.585 -7847.1934 8012.6328 C
-7847.1934 8013.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4030.5 4174.291 m
-3931.5696 4174.291 L
-3931.5696 4157.9272 L
-4030.5 4157.9272 L
-4030.5 4174.291 L
n
u
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3934.0071 4163.6094 m
-3933.7832 4163.5537 -3933.5879 4163.8643 -3933.6721 4164.0039 C
-3933.2161 4163.6274 -3933.2063 4164.0557 -3933.1472 4163.3262 C
-3932.8545 4162.9683 -3932.5422 4163.4639 -3932.8752 4163.7598 C
-3932.0313 4163.3135 L
-3932.5359 4163.1997 L
-3932.3984 4162.5933 -3931.7295 4163.3809 -3931.5696 4162.6743 C
-3932.4832 4162.7334 L
-3932.4375 4162.5313 L
-3932.6455 4162.749 -3933.0496 4162.6582 -3933.1904 4162.5732 C
-3933.1682 4162.4736 -3933.1824 4162.3115 -3933.0212 4162.2935 C
-3934.1243 4162.2471 -3933.3184 4163.3545 -3934.2336 4163.5557 C
-3934.1763 4163.541 -3934.1052 4163.5493 -3934.0071 4163.6094 C
f
-3934.9441 4162.125 m
-3935.3289 4162.8853 L
-3935.9744 4162.6895 L
-3935.9817 4162.9517 -3936.4519 4163.1641 -3936.1335 4163.3955 C
-3936.0713 4163.3545 -3935.9482 4163.2759 -3935.8489 4163.2998 C
-3935.9209 4163.8672 -3936.7073 4163.583 -3936.5176 4164.1572 C
-3936.0071 4164.0068 -3935.9287 4164.1318 -3935.6145 4163.6709 C
-3935.1465 4163.7236 -3934.8057 4163.8545 -3934.5872 4164.0615 C
-3934.4482 4163.9751 -3934.4287 4163.6274 -3934.2522 4163.5576 C
-3934.2913 4163.5664 -3934.3271 4163.5752 -3934.3721 4163.5796 C
-3934.3911 4162.7261 L
-3934.5383 4162.9063 -3934.6775 4162.8213 -3934.8408 4162.8389 C
-3934.0852 4161.8423 L
-3934.3289 4161.0435 -3935.0713 4161.5127 -3935.3679 4161.1807 C
-3935 4161.8984 -3935.6609 4161.5376 -3934.9441 4162.125 C
f
-3934.2522 4163.5576 m
-3934.2473 4163.5576 -3934.2393 4163.5566 -3934.2336 4163.5557 C
-3934.2393 4163.5566 -3934.2473 4163.5566 -3934.2522 4163.5576 C
f
-3990.7073 4168.5225 m
-3990.8679 4168.5376 -3990.9153 4168.7393 -3990.9385 4168.8408 C
-3989.1296 4168.8247 L
-3989.1863 4168.6006 -3989.7073 4168.3232 -3989.3591 4168.1895 C
-3989.5144 4167.9414 -3989.9873 4168.1533 -3990.0559 4168.4561 C
-3989.9248 4168.1143 L
-3990.3416 4168.5518 -3990.6262 4167.6919 -3990.3545 4167.4336 C
-3990.3896 4167.4385 L
-3991.5439 4169.123 L
-3991.1201 4169.2212 -3991.2175 4168.5435 -3990.7073 4168.5225 C
f
-4027.8567 4167.665 m
-4027.6223 4167.5869 -4027.5935 4167.5059 -4027.6201 4167.4229 C
-4027.7041 4167.4854 -4027.7839 4167.5576 -4027.8567 4167.665 C
f
-3991.8137 4169.5181 m
-3992.1753 4170.0454 L
-3992.0305 4169.9033 -3991.9033 4169.7139 -3991.8137 4169.5181 C
f
-3989.3088 4161.499 m
-3989.3081 4161.4712 -3989.3042 4161.4463 -3989.3137 4161.4087 C
-3989.4761 4161.6782 L
-3989.4736 4161.6782 -3989.4729 4161.6782 -3989.4719 4161.6782 C
-3989.4121 4161.6187 -3989.3584 4161.5591 -3989.3088 4161.499 C
f
-4000.0212 4171.499 m
-4000.0601 4171.5127 -4000.0935 4171.5181 -4000.1399 4171.5356 C
-4000.0967 4171.5313 -4000.0576 4171.5176 -4000.0212 4171.499 C
f
-3984.4087 4158.4854 m
-3985.2129 4158.9927 L
-3985.1057 4158.7524 -3985.4937 4158.8247 -3985.3242 4158.5449 C
-3985.3855 4158.583 -3985.6729 4158.6782 -3985.5945 4158.8013 C
-3985.4304 4158.7856 L
-3985.8545 4159.4854 -3985.5977 4159.7544 -3986.3008 4160.2871 C
-3985.8643 4160.7017 -3985.6729 4160.3223 -3985.4417 4160.0039 C
-3985.3633 4159.9551 -3985.2976 4159.9336 -3985.2312 4159.9072 C
-3984.5625 4158.9292 L
-3984.4087 4158.4854 L
f
-4016.6504 4163.6934 m
-4016.6416 4163.6392 L
-4016.6497 4163.6582 -4016.6511 4163.6763 -4016.6504 4163.6934 C
f
-4016.6064 4163.415 m
-4016.6416 4163.6392 L
-4016.5984 4163.5269 -4016.4329 4163.4199 -4016.6064 4163.415 C
f
-3991.6809 4169.0654 m
-3991.6919 4169.1953 -3991.7383 4169.3545 -3991.8137 4169.5181 C
-3991.5439 4169.123 L
-3991.5823 4169.1152 -3991.6328 4169.0879 -3991.6809 4169.0654 C
f
-3991.0671 4167.5376 m
-3990.3896 4167.4385 L
-3990.1399 4167.0752 L
-3990.3992 4167.2124 -3990.7024 4167.3062 -3991.0671 4167.5376 C
f
-3998.9512 4171.9102 m
-4000.3545 4172.0176 -3998.6064 4171.0869 -3999.2512 4170.8887 C
-3999.6409 4170.9854 -3999.7783 4171.3765 -4000.0212 4171.499 C
-3998.9082 4171.165 -4000.1721 4172.7856 -3999.0496 4172.5791 C
-3999.2092 4173.2856 -3999.8591 4173.3496 -4000.24 4173.1582 C
-4000.6711 4172.4771 -3999.8633 4172.6592 -3999.7656 4171.9912 C
-4000.2161 4172.1021 -4000.1367 4172.2261 -4000.3279 4172.6064 C
-4001.0352 4172.4478 -4001.7913 4173.4429 -4002.2136 4172.499 C
-4002.7256 4172.6494 -4002.6919 4172.9751 -4002.9863 4173.334 C
-4003.0449 4174.063 -4002.2249 4173.7168 -4002.0352 4174.291 C
-4002.0745 4174.2295 -4002.1511 4174.1064 -4002.1289 4174.0039 C
-4001.6863 4174.1572 L
-4002.1064 4173.9033 -4001.6279 4173.4287 -4001.4033 4173.3716 C
-4001.24 4173.3564 -4000.9153 4173.3232 -4000.96 4173.5254 C
-4001.2073 4173.6816 L
-4000.8889 4173.9126 -4000.5049 4173.1504 -4000.1687 4173.5454 C
-4000.1511 4173.709 -4000.2783 4173.7856 -4000.2976 4173.8877 C
-3999.9209 4173.3896 -3999.5576 4173.4185 -3999 4173.0664 C
-3999.3232 4173.7896 L
-3998.8772 4172.9893 -3997.8672 4173.2168 -3997.1672 4173.6392 C
-3997.2449 4173.5166 -3997.3848 4173.4307 -3997.3008 4173.291 C
-3996.8896 4173.1182 -3996.5791 4173.6143 -3996.7695 4173.9951 C
-3996.3679 4173.3955 -3995.2393 4174.5 -3994.6919 4173.7207 C
-3992.1753 4170.0454 L
-3992.2695 4170.1377 -3992.3704 4170.2124 -3992.4744 4170.2437 C
-3992.7031 4169.6094 -3992.8264 4169.6865 -3992.4255 4169.0879 C
-3992.8191 4169.4238 -3992.6687 4169.9336 -3993.26 4169.96 C
-3993.0281 4169.6406 -3992.9695 4168.9121 -3993.5359 4168.8369 C
-3994.9519 4169.4712 -3995.8904 4171.2759 -3997.2129 4172.1982 C
-3997.2617 4171.709 -3998.3 4171.8462 -3998.8047 4171.7314 C
-3998.6121 4171.2061 -3998.2375 4171.0566 -3997.8489 4170.9502 C
-3998.0928 4170.917 -3998.5127 4170.9033 -3998.8242 4170.8799 C
-3998.9512 4171.9102 L
f
-3995.6631 4170.2661 m
-3995.6985 4170.2227 -3995.7351 4170.1982 -3995.7727 4170.1753 C
-3995.7527 4170.2158 -3995.72 4170.2471 -3995.6631 4170.2661 C
f
-3997.7305 4170.9648 m
-3997.7256 4170.9473 -3997.7273 4170.9326 -3997.7256 4170.9126 C
-3997.7664 4170.9238 -3997.8071 4170.9385 -3997.8489 4170.9502 C
-3997.8071 4170.9541 -3997.76 4170.96 -3997.7305 4170.9648 C
f
-3992.0127 4167.9604 m
-3991.9287 4167.8213 -3991.8665 4167.7822 -3991.7825 4167.6416 C
-3991.8342 4167.6895 -3991.8992 4167.7271 -3991.9617 4167.7695 C
-3992.0212 4167.8354 -3992.0496 4167.9014 -3992.0127 4167.9604 C
f
-3991.7295 4168.8213 m
-3991.7744 4169.0225 L
-3991.7383 4169.0449 -3991.7129 4169.0493 -3991.6809 4169.0654 C
-3991.6711 4168.957 -3991.6816 4168.8662 -3991.7295 4168.8213 C
f
-4004.3137 4167.4873 m
-4004.4482 4167.5933 L
-4004.3672 4167.5854 -4004.3323 4167.542 -4004.3137 4167.4873 C
f
-4000.5144 4171.0796 m
-4000.0264 4171.0313 -4000.4561 4170.3496 -3999.7656 4170.3462 C
-3999.9683 4170.3013 L
-3999.4729 4169.9893 -3998.6023 4170.1328 -3998.0137 4170.1064 C
-3998.0801 4170.3984 -3997.6567 4170.4604 -3997.7256 4170.9126 C
-3997.3232 4170.8062 -3996.9248 4170.7061 -3996.7175 4170.2393 C
-3996.4683 4170.3926 -3996.0896 4169.9824 -3995.7727 4170.1753 C
-3995.9065 4169.9019 -3995.3215 4169.2515 -3996.0928 4169.5854 C
-3996.0305 4169.5479 -3996.0696 4169.4854 -3996.0081 4169.4473 C
-3996.5049 4169.0664 -3996.7041 4169.7124 -3997.1321 4169.7212 C
-3997.3879 4169.4517 -3996.7136 4169.2856 -3996.9551 4169.1782 C
-3997.4895 4169.4292 -3998.6321 4168.8535 -3998.5967 4169.8677 C
-3998.9856 4169.9395 -3999.0393 4169.7158 -3999.1553 4169.5303 C
-3999.7705 4170.6108 -4001.4385 4169.0664 -4001.4329 4170.4478 C
-4001.2083 4170.3936 -4000.8423 4170.4229 -4000.5127 4170.1274 C
-4000.5144 4171.0796 L
f
-3992.8323 4168.0313 m
-3992.8623 4168.0254 -3992.9023 4168.0303 -3992.9272 4168.0181 C
-3992.8992 4168.0254 -3992.8643 4168.0303 -3992.8323 4168.0313 C
f
*u
1 D
-3986.6736 4172.0356 m
-3986.8777 4172.9395 L
-3988.0398 4173.1553 -3988.46 4172.9014 -3989.4761 4172.9375 C
-3989.5537 4172.8135 -3989.4304 4172.7349 -3989.3679 4172.6953 C
-3990.0823 4172.7998 -3991.1511 4172.6104 -3991.6711 4173.0254 C
-3991.8984 4173.0181 -3992.4951 4172.7314 -3992.2693 4172.4648 C
-3992.3799 4172.5454 -3992.5063 4172.623 -3992.6335 4172.5942 C
-3992.6672 4172.2695 -3992.3489 4172.5015 -3992.3416 4172.2349 C
-3992.4424 4172.2134 -3992.4817 4172.1504 -3992.5049 4172.2524 C
-3992.3352 4171.9736 -3992.6809 4171.1509 -3991.8896 4171.1719 C
-3991.5833 4171.9307 -3992.4385 4171.2598 -3992.2576 4172.0967 C
-3991.9951 4172.1021 -3992.0256 4171.7783 -3992.0032 4171.6763 C
-3991.6687 4171.6953 -3991.6775 4171.9053 -3991.6953 4172.0967 C
-3991.5671 4171.8369 -3991.1465 4172.1982 -3990.9695 4171.8037 C
-3990.3191 4171.7393 -3991.0049 4172.4326 -3990.5801 4172.4229 C
-3990.3352 4171.5752 L
-3989.6289 4171.7349 L
-3988.6064 4171.4375 -3989.7751 4170.2705 -3988.6064 4169.791 C
-3988.76 4170.2334 -3988.2913 4170.9766 -3987.7473 4171.1533 C
-3988.0728 4171.1846 -3988.6743 4171.7373 -3989.0945 4171.4854 C
-3988.5022 4172.1494 -3989.9097 4171.5654 -3989.6023 4172.3252 C
-3989.3096 4171.9648 -3988.8215 4171.917 -3988.4409 4172.1108 C
-3988.5657 4172.1895 L
-3988.1609 4172.2793 -3987.8545 4171.3926 -3987.2959 4171.7314 C
-3987.0183 4171.7041 -3987.0703 4171.9429 -3987.1191 4172.1416 C
-3986.8843 4172.0142 -3986.6743 4171.8486 -3986.6736 4172.0356 C
f
0 D
-3987.2783 4172.2134 m
-3987.6497 4172.1294 L
-3987.5615 4172.2695 -3987.4231 4172.2646 -3987.2783 4172.2134 C
f
*U
-3940.1377 4162.2349 m
-3940.1008 4162.2573 -3940.0583 4162.2803 -3940.0249 4162.3037 C
-3940.0496 4162.2646 -3940.0923 4162.2471 -3940.1377 4162.2349 C
f
-3973.0967 4161.9102 m
-3972.8816 4161.9385 L
-3972.9656 4161.9092 -3973.0344 4161.9053 -3973.0967 4161.9102 C
f
-3968.2693 4159.1104 m
-3967.9551 4158.9126 L
-3968.0791 4158.9253 -3968.1763 4159.0039 -3968.2693 4159.1104 C
f
-3942.7024 4162.1768 m
-3942.7129 4162.1709 L
-3942.7305 4162.1846 -3942.7439 4162.2041 -3942.7625 4162.2158 C
-3942.7024 4162.1768 L
f
-3958.5872 4161.0933 m
-3958.5393 4161.165 -3958.4856 4161.23 -3958.4121 4161.2803 C
-3958.4209 4161.1963 -3958.4863 4161.1353 -3958.5872 4161.0933 C
f
-3968.3271 4159.1475 m
-3968.3191 4159.1553 -3968.3145 4159.1572 -3968.3081 4159.1631 C
-3968.2959 4159.1455 -3968.2825 4159.1265 -3968.2693 4159.1104 C
-3968.3271 4159.1475 L
f
-3975.2231 4159.4385 m
-3975.2693 4159.4648 -3975.3113 4159.4854 -3975.3608 4159.5225 C
-3975.2959 4159.5059 -3975.2561 4159.4741 -3975.2231 4159.4385 C
f
-3974.9199 4161.8408 m
-3974.9695 4161.8623 -3975.0168 4161.8887 -3975.0537 4161.9253 C
-3974.9199 4161.8408 L
f
-3982.3577 4160.1934 m
-3982.6472 4160.3145 L
-3982.5049 4160.3013 -3982.4199 4160.2544 -3982.3577 4160.1934 C
f
-3975.6863 4161.2856 m
-3975.7031 4161.3252 -3975.72 4161.3633 -3975.7312 4161.4014 C
-3975.6912 4161.375 -3975.6721 4161.3252 -3975.6863 4161.2856 C
f
-3938.2976 4164.7617 m
-3938.3042 4164.7617 -3938.3113 4164.7646 -3938.3152 4164.7646 C
-3938.3225 4164.8633 L
-3938.2976 4164.7617 L
f
-3937.5935 4163.5269 m
-3937.5105 4163.5015 -3937.4241 4163.479 -3937.3391 4163.457 C
-3937.4336 4163.4517 -3937.5256 4163.4785 -3937.5935 4163.5269 C
f
-3954.3809 4162.457 m
-3954.3042 4162.5796 -3954.1243 4162.7261 -3954.2083 4162.8662 C
-3954.0615 4162.6895 -3954.0713 4162.2603 -3954.3809 4162.457 C
f
-3939.7092 4170.0664 m
-3939.6631 4169.9517 -3939.6057 4169.8643 -3939.5481 4169.7783 C
-3939.6553 4169.9019 -3939.7493 4170.0039 -3939.7092 4170.0664 C
f
-3939.5481 4169.7783 m
-3939.4951 4169.7173 -3939.4385 4169.6533 -3939.3911 4169.5869 C
-3939.4463 4169.6416 -3939.4993 4169.7061 -3939.5481 4169.7783 C
f
-3956.3313 4169.4912 m
-3956.3503 4169.4336 -3956.3799 4169.3853 -3956.4199 4169.3701 C
-3956.4082 4169.4854 -3956.3762 4169.5103 -3956.3313 4169.4912 C
f
-3937.1335 4163.5928 m
-3937.0879 4163.3911 -3935.9817 4162.9517 -3936.9121 4162.8486 C
-3936.8762 4162.2192 -3936.3152 4162.5576 -3936.0671 4162.4019 C
-3936.2473 4162.2544 -3935.9775 4161.998 -3936.0322 4161.7734 C
-3936.1553 4161.8496 -3936.3015 4162.0303 -3936.5049 4161.9854 C
-3936.5984 4161.6982 -3936.2898 4161.5024 -3936.0488 4161.6104 C
-3936.3457 4161.2783 -3935.6721 4161.1118 -3936.0923 4160.8574 C
-3936.9905 4161.0791 -3937.6252 4161.3076 -3938.2568 4162.2261 C
-3937.7449 4162.0752 -3937.1721 4161.8877 -3936.7522 4162.1406 C
-3936.9287 4162.6846 L
-3937.4033 4162.2061 -3937.6963 4162.563 -3938.1631 4162.5127 C
-3937.1145 4162.8013 L
-3936.6233 4163.2544 -3936.9519 4163.3584 -3937.3391 4163.457 C
-3937.2439 4163.4639 -3937.1577 4163.4966 -3937.1335 4163.5928 C
f
-3937.8401 4168.3662 m
-3937.8225 4168.3809 L
-3937.8071 4168.3623 -3937.7881 4168.3496 -3937.7783 4168.3267 C
-3937.8401 4168.3662 L
f
-3982.3042 4171.2017 m
-3982.3943 4171.4077 L
-3982.3191 4171.3145 -3982.2959 4171.2515 -3982.3042 4171.2017 C
f
-3938.4656 4165.7314 m
-3938.4648 4165.7314 L
-3938.4719 4165.7373 -3938.4736 4165.7373 -3938.4656 4165.7314 C
f
-3980.0632 4171.2437 m
-3980.0664 4171.2583 -3980.0696 4171.2744 -3980.0752 4171.291 C
-3980.0671 4171.2744 -3980.0671 4171.2583 -3980.0632 4171.2437 C
f
-3979.4641 4159.5142 m
-3979.4683 4159.4893 -3979.4695 4159.4648 -3979.4792 4159.4404 C
-3979.5271 4159.4712 -3979.5039 4159.4966 -3979.4641 4159.5142 C
f
-3980.0615 4171.1934 m
-3980.0615 4171.21 -3980.0601 4171.2261 -3980.0632 4171.2437 C
-3980.0615 4171.2261 -3980.0576 4171.209 -3980.0615 4171.1934 C
f
-3969.1641 4169.1963 m
-3969.1985 4169.1021 -3969.2527 4169.0127 V
-3969.2737 4169.063 -3969.2527 4169.1221 -3969.1641 4169.1963 C
f
-3971.3152 4168.3911 m
-3971.3152 4168.3911 L
-3971.3289 4168.3711 -3971.3369 4168.3535 -3971.3545 4168.3311 C
-3971.3152 4168.3911 L
f
-3954.8896 4160.0068 m
-3954.9961 4159.999 -3955.0759 4160.0127 -3955.1433 4160.0356 C
-3955.0657 4160.0493 -3954.9817 4160.0479 -3954.8896 4160.0068 C
f
-3980.0752 4171.291 m
-3980.0977 4171.3486 -3980.1296 4171.4077 -3980.1824 4171.4814 c
-3980.1243 4171.4033 -3980.0935 4171.3433 -3980.0752 4171.291 C
f
-3965.8843 4166.4478 m
-3965.9072 4166.4692 -3965.9287 4166.4893 -3965.9504 4166.5078 C
-3965.9373 4166.5181 -3965.9241 4166.5225 -3965.9111 4166.5352 C
-3965.8843 4166.4478 L
f
-3964.7617 4166.8486 m
-3964.8 4166.9102 -3964.8176 4166.9741 -3964.8391 4167.0303 C
-3964.4385 4166.8037 -3963.7024 4167.0493 -3963.6152 4166.4712 C
-3963.7512 4166.4854 -3964.4561 4166.1455 -3964.3359 4165.8062 C
-3964.6152 4165.9512 -3965.0281 4165.5454 -3965.1785 4165.6406 C
-3964.72 4165.957 -3965.1289 4166.1289 -3965.4385 4166.3232 C
-3965.72 4166.1553 -3965.3855 4165.8584 -3965.6279 4165.7515 C
-3966.2793 4165.8145 L
-3965.7119 4165.8916 L
-3965.8843 4166.4478 L
-3965.8633 4166.4292 -3965.8489 4166.417 -3965.8264 4166.3955 C
-3964.8665 4166.1353 -3965.7449 4167.21 -3964.7617 4166.8486 C
f
-3964.8391 4167.0303 m
-3964.8992 4167.0654 -3964.9519 4167.1079 -3964.9929 4167.167 C
-3964.9023 4167.1582 -3964.8672 4167.1016 -3964.8391 4167.0303 C
f
-3960.9172 4167.9478 m
-3960.8679 4167.9292 -3960.8145 4167.9033 -3960.7473 4167.8599 c
-3960.7793 4167.8809 -3960.8535 4167.9077 -3960.9172 4167.9478 C
f
-3989.6584 4167.167 m
-3989.6416 4167.3311 -3989.0823 4167.6685 -3989.0923 4167.2407 C
-3989.0923 4167.2407 L
-3989.2583 4167.1982 -3989.4255 4167.1533 -3989.5935 4167.1064 C
-3989.6584 4167.167 L
f
-3950.2336 4165.4604 m
-3950.2959 4165.4478 -3950.3584 4165.4429 -3950.4209 4165.4502 C
-3950.4343 4165.4712 -3950.4473 4165.4951 -3950.4573 4165.5166 C
-3950.4192 4165.5796 -3950.2959 4165.5015 -3950.2336 4165.4604 C
f
-3964.1631 4165.605 m
-3964.2656 4165.6709 -3964.3113 4165.7383 -3964.3359 4165.8062 C
-3964.2695 4165.7725 -3964.2083 4165.7173 -3964.1631 4165.605 C
f
-3950.1985 4166.4785 m
-3950.1191 4166.6006 -3950.0022 4166.7871 -3949.9856 4166.9502 C
-3949.8232 4166.9541 -3949.7092 4166.7295 -3949.5439 4166.6494 C
-3949.7305 4166.7119 -3949.9463 4166.6685 -3950.1985 4166.4785 C
f
-3949.5305 4166.6416 m
-3949.5352 4166.6455 -3949.5398 4166.6475 -3949.5439 4166.6494 C
-3949.5393 4166.6494 -3949.5352 4166.644 -3949.5305 4166.6416 C
f
*u
1 D
-3989.9912 4166.9854 m
-3990.0393 4167.0181 -3990.0889 4167.0479 -3990.1399 4167.0752 C
-3990.0625 4166.9604 L
-3990.1912 4166.9185 -3990.3191 4166.8774 -3990.4473 4166.8311 C
-3990.4937 4166.8584 -3990.5439 4166.8843 -3990.6057 4166.8984 C
-3990.5808 4166.8843 -3990.5615 4166.8389 -3990.5496 4166.792 C
-3990.5913 4166.7764 -3990.6321 4166.7593 -3990.6729 4166.7422 C
-3990.9792 4167.1851 -3991.7417 4167.5088 -3991.9617 4167.7695 C
-3992.2527 4167.959 -3992.6089 4168.0664 -3992.8323 4168.0313 C
-3992.6252 4168.041 -3992.3503 4167.9517 -3992.4329 4167.707 C
-3992.8533 4167.4517 -3993.0576 4166.7173 -3993.7832 4167.3486 C
-3993.3577 4167.3389 L
-3994.3145 4168.2896 L
-3994.6497 4167.8955 -3993.8369 4167.8145 -3993.7041 4167.4727 C
-3994.4482 4167.9414 -3995.0671 4166.6895 -3995.4121 4167.5127 C
-3995.4607 4167.0244 -3995.5422 4166.21 -3996.0305 4166.2583 C
-3995.6785 4166.8145 -3996.3232 4166.6157 -3996.0344 4167.2119 C
-3996.2031 4167.4912 -3996.5791 4167.0356 -3996.6072 4167.4014 C
-3996.5615 4167.1992 L
-3997.3953 4166.4263 -3997.6682 4167.6377 -3998.0249 4168.0356 C
-3999.0232 4168.2349 -3999.4817 4167.9185 -4000.2959 4168.0015 C
-4000.3279 4167.6743 -4000.5496 4166.7744 -4000.8762 4166.8086 C
-4001.0281 4167.2515 -4001.7649 4167.4561 -4001.8401 4168.0225 C
-4001.2561 4168.2598 -4001.3623 4167.5479 -4001.0127 4167.415 C
-4000.7217 4168.0093 -4000.9863 4168.0024 -4000.5889 4168.3584 C
-4000.9097 4168.1274 -4002.0383 4168.6685 -4002.3896 4168.1104 C
-4002.2656 4168.0313 L
-4002.8264 4167.6934 -4002.9336 4166.291 -4003.8679 4167.1396 C
-4004.3137 4167.4873 L
-4004.2922 4167.4307 -4004.2898 4167.3643 -4004.2783 4167.3135 C
-4005.0081 4167.2544 -4004.8088 4166.6094 -4005.6145 4167.1182 c
-4005.5522 4167.0791 -4005.5913 4167.0166 -4005.5281 4166.9785 C
-4005.9873 4166.6597 -4006.4504 4167.2998 -4006.7976 4167.4336 C
-4007.0095 4166.9604 -4006.7473 4166.9683 -4006.6162 4166.6265 C
-4007.4241 4166.4429 -4008.2959 4167.2544 -4008.7976 4167.8311 C
-4009.3184 4167.5537 L
-4009.0095 4167.3584 -4008.6321 4166.8599 -4008.7263 4166.5742 C
-4009.0127 4166.6685 -4008.9573 4166.8926 -4009.3623 4166.8013 C
-4009.2932 4166.499 -4009.1233 4166.2173 -4008.9329 4165.8369 C
-4009.7705 4165.3311 -4009.1201 4166.9092 -4009.7063 4165.9814 C
-4009.9695 4165.9751 -4010.1223 4166.417 -4010.1511 4166.7822 C
-4010.6279 4166.3037 L
-4010.6809 4166.7695 -4011.2695 4166.7959 -4011.6553 4166.8662 C
-4011.7024 4167.0664 -4011.3447 4167.3623 -4011.1985 4167.1816 C
-4011.2273 4167.5479 -4011.6377 4167.7192 -4011.9016 4167.7124 C
-4011.9983 4166.7373 -4013.6296 4167.8535 -4013.3176 4166.7041 C
-4014.5032 4167.021 -4016.1687 4167.1201 -4016.9512 4167.5269 C
-4017.2092 4167.2573 -4017.7351 4167.2437 -4017.4199 4166.7856 C
-4018.3743 4166.7822 -4018.8665 4167.7832 -4019.8137 4167.5166 C
-4019.8921 4167.394 -4019.3855 4167.5078 -4019.4192 4167.1816 C
-4020.0383 4167.5732 -4020.5457 4166.7695 -4021.5063 4167.0303 C
-4021.3447 4167.0127 -4021.2976 4166.8115 -4021.2751 4166.71 C
-4021.2583 4166.8716 -4021.6687 4167.0454 -4021.9172 4167.2017 C
-4022.0569 4167.1182 -4021.7312 4167.0854 -4021.8096 4166.9604 C
-4023.6653 4166.4873 -4025.0791 4167.8135 -4026.9248 4167.7695 c
-4026.3977 4167.7822 -4026.1985 4167.1353 -4026.1929 4166.8716 C
-4026.7092 4166.8599 L
-4026.9082 4167.1816 -4027.2959 4167.1816 -4027.6201 4167.4229 C
-4027.6599 4167.3013 -4027.8176 4167.1709 -4027.6567 4167.0181 C
-4028.6768 4166.3643 -4029.25 4168.1982 -4030.5 4167.8623 C
-4028.9863 4166.5591 L
-4029.3608 4166.105 L
-4028.6953 4165.5127 L
-4029.0928 4165.1553 -4029.4385 4165.9814 -4029.4863 4165.4912 C
-4029.4023 4165.3535 -4029.2 4165.3975 -4029.1936 4165.1328 C
-4029.5752 4164.9414 -4029.6052 4165.3062 -4029.8921 4165.4014 C
-4029.1362 4164.4053 -4027.6543 4164.4209 -4026.8567 4164.1768 C
-4026.7312 4164.0977 -4026.9641 4164.417 -4026.9863 4164.5181 C
-4026.6609 4164.4854 -4026.4656 4164.7959 -4026.0559 4164.623 C
-4025.8015 4164.2017 -4026.25 4164.3135 -4026.4519 4164.2695 C
-4026.4241 4163.9033 -4026.3225 4163.9253 -4026.0977 4163.8701 C
-4026.0488 4164.3584 -4024.8633 4164.0435 -4024.5735 4164.6392 C
-4023.3721 4164.4854 -4024.7656 4163.375 -4023.5928 4163.5869 C
-4023.2424 4164.1455 L
-4022.5615 4163.7139 -4021.6809 4163.3311 -4020.9104 4163.4502 C
-4021.0728 4163.4683 L
-4021.1809 4163.707 -4021.0022 4163.8545 -4020.9231 4163.9766 C
-4020.3408 4164.2158 -4019.8176 4163.5376 -4019.4648 4164.0967 C
-4018.8008 4163.5024 -4017.6936 4163.063 -4016.9343 4162.7568 C
-4016.7295 4163.4932 -4017.9248 4163.3809 -4018.2407 4163.8413 C
-4017.5496 4163.8389 L
-4017.9768 4163.8486 -4018.1455 4164.1289 -4018.4016 4164.5479 C
-4017.7959 4164.6846 -4017.5967 4164.04 -4017.0225 4163.8535 C
-4017.0671 4164.0537 -4016.9905 4164.1768 -4016.7256 4164.1816 C
-4016.6504 4163.6934 L
-4016.6455 4163.7334 -4016.6162 4163.7705 -4016.5344 4163.8013 C
-4015.5127 4163.5024 L
-4015.7295 4163.2935 -4015.74 4162.8677 -4016.0039 4162.8623 C
-4015.9097 4163.1475 -4016.1335 4163.2041 -4016.3977 4163.1963 C
-4016.1663 4162.8774 -4016.6553 4162.9272 -4016.6497 4162.6631 C
-4016.1201 4162.6763 -4015.4695 4162.6104 -4015.1223 4162.4766 C
-4015.0095 4162.9272 L
-4014.5049 4163.041 -4013.9719 4162.7896 -4013.6296 4162.9209 C
-4013.7375 4163.1597 L
-4013.1321 4163.2979 -4012.5359 4163.0078 -4011.9983 4163.4473 C
-4011.4583 4162.9326 -4010.7783 4162.5039 -4010.3369 4161.9648 C
-4010.1008 4161.3843 -4008.7522 4162.6953 -4008.1433 4161.8774 C
-4008.1023 4161.9395 -4008.5615 4162.3145 -4008.7693 4162.5342 C
-4008.3643 4162.624 -4008.0422 4161.9014 -4007.9153 4162.5132 C
-4008.8242 4162.3076 -4007.8665 4163.0015 -4008.2759 4163.1753 C
-4007.8503 4163.1641 -4007.4016 4163.0537 -4007.1929 4162.8354 C
-4007.8816 4162.8398 -4006.9482 4161.9893 -4007.6455 4162.2559 C
-4007.1052 4161.7412 -4006.3679 4161.5356 -4005.7241 4161.7349 C
-4005.7305 4161.999 -4005.6511 4162.1221 -4005.4111 4162.2314 C
-4005.2175 4161.8486 L
-4004.9163 4161.9185 -4005.8 4162.3013 -4005.1936 4162.4385 C
-4004.5696 4161.7832 -4003.3145 4162.8096 -4003.0413 4161.5977 C
-4002.5657 4162.0767 -4003.9463 4162.083 -4003.2295 4162.6685 C
-4003.6465 4163.1064 -4004.2217 4162.605 -4004.3591 4163.21 C
-4003.9504 4163.0376 -4004.21 4163.7212 -4003.9463 4163.7271 C
-4003.4905 4163.3545 L
-4003.5913 4163.3311 L
-4002.8264 4162.7603 -4001.6145 4163.0342 -4000.6377 4162.9375 C
-3999.8103 4162.3281 -3999.2407 4161.4478 -3998.2483 4161.5142 C
-3998.5413 4161.8716 -3997.4241 4161.8584 -3998.0488 4162.5132 C
-3997.5896 4162.8286 -3997.1362 4162.4551 -3997.1272 4162.1909 C
-3997.5313 4162.1006 -3997.2693 4162.1064 -3997.6096 4161.9766 C
-3997.3799 4161.6563 -3996.8503 4161.6709 -3996.6328 4161.8799 C
-3996.7336 4161.8564 -3996.6953 4161.9185 -3996.7175 4162.0181 C
-3996.2351 4162.2334 -3996.4863 4161.6997 -3996.1377 4161.5664 C
-3996.0271 4162.0142 -3995.3679 4161.6865 -3995.0496 4161.9185 C
-3994.5879 4161.2793 L
-3994.8416 4161.6992 -3994.1455 4161.4326 -3994.0728 4161.8188 C
-3993.7417 4161.5225 -3993.4641 4161.0024 -3992.96 4161.1157 C
-3993.1682 4161.3354 -3992.5 4161.4326 -3992.4912 4161.8584 C
-3991.6279 4162.2661 -3991.0615 4160.6963 -3990.2439 4161.3062 C
-3990.2693 4161.4063 -3990.4343 4161.6865 -3990.1953 4161.7935 C
-3990.0071 4161.6743 -3989.6775 4161.7246 -3989.4761 4161.6782 C
-3989.4824 4161.6904 L
-3989.4785 4161.6865 -3989.4761 4161.6816 -3989.4719 4161.6782 C
-3989.3733 4161.6553 -3989.3113 4161.6021 -3989.3088 4161.499 C
-3988.9641 4161.082 -3988.7864 4160.6553 -3988.1079 4160.3013 C
-3988.1577 4159.8135 -3988.7305 4160.0024 -3988.9785 4160.1597 C
-3989.1929 4160.6416 L
-3989.3977 4159.9053 -3989.8047 4160.7695 -3989.9607 4160.521 C
-3989.5537 4159.6582 -3988.3816 4159.8701 -3987.6785 4159.3398 C
-3988.1072 4158.6597 -3989.0398 4158.5537 -3989.8535 4158.6353 C
-3989.4951 4158.9287 L
-3989.9209 4158.9385 L
-3989.5088 4159.457 L
-3989.9121 4159.3662 -3990.2607 4159.499 -3990.6252 4159.4692 C
-3990.1985 4159.46 -3990.0322 4160.1328 -3990.2737 4160.0264 C
-3990.7493 4159.5479 -3990.7693 4160.3389 -3991.1328 4160.3096 C
-3990.9304 4160.3545 -3990.6672 4160.3623 -3990.8369 4160.6416 C
-3991.5537 4160.0557 -3991.7473 4160.4375 -3992.3992 4159.8115 C
-3992.3184 4160.625 -3993.2136 4159.8926 -3993.3113 4160.5591 C
-3993.0088 4160.6274 L
-3993.6504 4161.1187 L
-3994.2424 4160.4561 -3993.1262 4160.4429 -3994.0271 4159.9741 C
-3994.8584 4159.8926 -3994.8369 4160.7471 -3995.4905 4160.8101 C
-3995.2751 4160.3286 -3994.7568 4159.915 -3994.2295 4159.9287 C
-3994.5488 4159.6963 L
-3994.3799 4159.417 -3993.6504 4159.4756 -3993.2864 4159.5044 C
-3993.8879 4160.0576 -3993.0049 4159.6743 -3992.7312 4160.1064 C
-3992.6809 4159.6406 -3993.0671 4159.7139 -3992.6111 4159.3398 C
-3993.0383 4159.3486 -3993.1008 4159.3877 -3993.6443 4159.2119 C
-3992.4695 4159.4238 -3992.5879 4157.5933 -3991.5625 4157.9854 C
-3992.0352 4158.1963 -3991.3977 4158.6582 -3991.3408 4158.8843 C
-3991.1184 4158.8281 -3990.6672 4158.7173 -3990.4817 4158.6006 C
-3990.6497 4157.9272 L
-3990.0522 4157.6353 -3989.8447 4159.0625 -3989.1553 4158.3677 C
-3989.0657 4157.9648 -3989.7617 4158.2314 -3989.6377 4158.1533 C
-3988.6943 4157.73 -3988.3545 4158.8145 -3987.5168 4159.3223 C
-3987.4695 4159.1201 -3987.4792 4158.6934 -3987.1863 4158.3369 C
-3987.2783 4158.7412 -3987.0615 4158.9478 -3987.3911 4159.2437 C
-3987.1111 4159.415 -3986.7793 4159.1182 -3986.5322 4158.9604 C
-3987.1152 4158.7236 -3986.2937 4158.3799 -3986.1863 4158.1377 C
-3985.8843 4158.2061 -3986.2783 4158.541 -3986.4641 4158.6582 C
-3986.2217 4158.7661 -3985.9336 4159.3623 -3985.7959 4158.7568 C
-3985.7864 4159.1816 -3986.4736 4159.8774 -3986.9231 4159.9873 C
-3986.6201 4160.0557 L
-3986.8289 4160.2734 -3986.8679 4160.2119 -3987.1687 4160.1455 C
-3986.8743 4160.4756 -3986.9033 4160.8398 -3986.9719 4161.1431 C
-3987.0105 4161.0811 -3986.9504 4161.042 -3986.9873 4160.9814 C
-3987.2295 4160.873 -3987.4153 4160.9893 -3987.3591 4161.2158 C
-3987.5769 4161.7876 -3987.0232 4161.5732 -3986.8591 4161.8584 C
-3986.7351 4161.8213 -3986.6111 4161.7822 -3986.4895 4161.7437 C
-3985.2312 4159.9072 L
-3984.6936 4159.6934 -3984.4519 4160.1328 -3984.0481 4160.4102 C
-3983.9373 4159.9185 L
-3983.4695 4159.9692 -3983.0281 4160.125 -3983.3279 4160.7471 C
-3983.3447 4160.583 -3983.4065 4160.6221 -3983.5081 4160.5977 C
-3983.5215 4160.665 -3983.5449 4160.7124 -3983.5745 4160.7515 C
-3983.5842 4160.7803 -3983.5896 4160.8086 -3983.5977 4160.8369 C
-3983.0967 4160.6782 -3982.7839 4160.5752 -3982.7551 4160.5566 C
-3983.6057 4161.2695 -3982.7976 4161.4478 -3982.9399 4162.3188 C
-3982.0808 4162.0352 L
-3982.6016 4161.7593 -3982.0903 4161.6094 -3981.9055 4161.4912 C
-3981.8545 4161.9814 -3981.2136 4161.4873 -3980.9121 4161.5557 C
-3980.9343 4161.6563 L
-3980.6553 4161.8262 -3980.1663 4161.7783 -3979.8184 4161.6455 C
-3979.8342 4161.4814 -3979.3879 4160.6807 -3979.1736 4160.1982 C
-3979.7705 4160.0142 -3979.4163 4159.8184 -3979.4641 4159.5142 C
-3979.4023 4159.542 -3979.2913 4159.5479 -3979.2783 4159.4854 C
-3979.1929 4159.3462 -3979.3943 4159.2998 -3979.4111 4159.1377 C
-3980.0457 4159.3662 -3980.6985 4159.4307 -3980.9573 4160.1143 C
-3980.7625 4160.4238 -3980.6252 4159.8184 -3980.4072 4160.0254 C
-3980.7217 4160.4854 -3981.1272 4160.394 -3981.6543 4160.3809 C
-3981.8271 4159.9712 L
-3982.3577 4160.1934 L
-3982.1362 4159.9766 -3982.2695 4159.5479 -3981.7129 4159.4648 C
-3981.7839 4159.0791 -3982.2649 4159.5537 -3982.6057 4159.4238 C
-3982.78 4159.9683 L
-3982.7129 4159.665 -3983.4424 4159.6064 -3982.9241 4159.1924 C
-3982.0808 4158.7471 L
-3982.3152 4158.375 L
-3981.6023 4158.2705 L
-3981.7705 4158.5518 L
-3980.6252 4158.1753 -3981.4329 4159.6353 -3980.28 4158.9927 C
-3979.9192 4158.333 -3979.5313 4158.2622 -3978.8247 4158.4229 C
-3979.3359 4158.5703 -3978.8772 4158.8877 -3979.0696 4159.2695 C
-3978.5481 4159.5449 -3978.3721 4159.0015 -3978.1016 4158.7437 C
-3977.9688 4159.0923 -3977.8743 4159.3774 -3978.3401 4159.3262 C
-3978.3984 4160.0557 -3977.7273 4159.1997 -3977.6848 4159.9512 C
-3976.1416 4159.9287 -3976.4482 4157.5254 -3974.6443 4158.4639 C
-3974.7119 4158.7661 L
-3973.5664 4158.3896 -3972.9055 4158.7515 -3971.8447 4158.5127 C
-3971.0095 4159.2832 L
-3971.1963 4159.4014 -3971.6985 4159.9771 -3971.4641 4160.3486 C
-3971.8704 4159.5688 -3972.3015 4159.8413 -3972.7393 4159.4238 C
-3972.7839 4159.6265 -3972.6057 4159.7725 -3972.5281 4159.8975 C
-3972.7922 4159.8896 -3972.9248 4159.541 -3973.2737 4159.6763 C
-3973.2568 4159.8369 -3972.8762 4160.0303 -3973.1631 4160.125 C
-3973.6377 4159.6455 L
-3974.2727 4159.874 -3973.9504 4160.7935 -3974.6963 4160.5732 C
-3974.5576 4160.1455 -3974.2744 4159.5264 -3973.9856 4159.4238 C
-3974.3264 4159.3311 -3973.5313 4159.165 -3973.8423 4158.9092 C
-3974.3333 4159.5435 -3974.5703 4159.041 -3975.2231 4159.4385 C
-3975.1465 4159.3496 -3975.1262 4159.2256 -3974.9656 4159.1865 C
-3975.9128 4158.9185 L
-3975.6785 4159.2896 -3976.6953 4159.3262 -3976.6072 4159.8774 C
-3975.5977 4160.105 -3975.8943 4159.7725 -3974.7439 4160.0854 C
-3975.0696 4160.21 -3975.4895 4160.7705 -3975.6863 4161.2856 C
-3975.6963 4161.2646 -3975.7129 4161.2471 -3975.7483 4161.2373 C
-3975.9241 4161.7822 -3975.7449 4161.9287 -3975.7483 4162.8809 C
-3975.2231 4162.2041 -3974.8721 4162.7617 -3974.2527 4162.3716 C
-3974.1362 4161.8496 -3974.6121 4161.7061 -3974.9199 4161.8408 C
-3974.3743 4161.4951 L
-3974.4817 4161.7349 L
-3973.0967 4161.9102 L
-3973.3591 4161.9385 -3973.4482 4162.2407 -3973.5852 4162.4688 C
-3973.4065 4162.4893 -3973.2295 4162.6274 -3973.0413 4162.7783 C
-3973.0808 4162.2803 -3973.0559 4161.9287 -3972.8816 4161.9385 C
-3971.9905 4162.0566 -3971.4951 4162.5039 -3971.1663 4163.0728 C
-3971.1321 4163.0615 -3971.0935 4163.0493 -3971.0625 4163.0376 C
-3971.2119 4162.5269 -3970.4297 4162.1201 -3970.1536 4161.5977 C
-3970.1672 4162.1265 -3969.6943 4161.915 -3969.4375 4162.1846 C
-3969.3008 4161.5791 -3969.4832 4160.7432 -3969.7959 4160.248 C
-3970.3984 4160.8013 -3970.1335 4160.8062 -3970.4182 4161.5923 C
-3971.3848 4162.1157 L
-3971.1687 4161.6328 L
-3971.6511 4161.4199 -3972.1145 4162.0576 -3972.0791 4161.4292 C
-3971.8242 4161.0103 -3971.4033 4161.2646 -3971.1504 4160.8438 C
-3971.4695 4160.6143 L
-3970.9065 4159.9966 -3971.1809 4161.209 -3970.4993 4160.7783 C
-3970.75 4160.2437 -3970.4375 4160.7393 -3970.1455 4160.3809 C
-3970.3799 4160.0093 -3971.3457 4160.5342 -3971.1409 4159.6265 C
-3970.7864 4159.2295 -3969.9482 4160.6904 -3969.4792 4159.7876 C
-3969.5022 4159.8896 L
-3968.8103 4160.0078 -3968.5671 4159.4893 -3968.3081 4159.1631 C
-3968.0137 4159.457 -3967.6072 4159.0435 -3967.2881 4159.0103 C
-3967.2959 4159.2744 L
-3966.8457 4159.1641 L
-3967.0601 4159.6455 -3967.3733 4159.1509 -3967.76 4159.2212 C
-3967.7119 4159.7119 L
-3968.1577 4159.1294 -3968.4551 4160.0142 -3968.8008 4160.4375 C
-3968.2976 4160.0127 -3967.3799 4160.5576 -3967.2617 4159.5977 C
-3966.9504 4160.0942 L
-3966.8015 4159.915 L
-3966.5696 4160.2871 -3966.8064 4160.8701 -3967.2561 4160.9814 C
-3967.3342 4160.8574 -3967.3733 4160.7959 -3967.3496 4160.6934 C
-3967.5583 4160.9126 -3967.75 4161.2935 -3968.2551 4161.1807 C
-3967.9856 4160.9209 L
-3968.6145 4160.8853 -3969.1863 4161.0752 -3969.4016 4161.5576 C
-3968.4937 4161.7622 -3967.6008 4161.8057 -3966.7483 4161.7832 C
-3966.4968 4160.6743 -3966.1985 4160.0518 -3966.0703 4159.021 C
-3965.4983 4158.8311 -3964.7217 4158.6895 -3964.2249 4159.0664 C
-3964.2705 4159.2695 L
-3964.0281 4159.375 -3963.8047 4159.3188 -3963.6184 4159.2017 C
-3963.3623 4159.4727 -3963.7937 4159.7471 -3963.6152 4159.8936 C
-3962.7959 4159.5479 L
-3962.8464 4160.0142 -3963.5359 4160.0166 -3963.8633 4160.0493 C
-3963.8015 4160.0103 -3963.6768 4159.9326 -3963.7168 4159.8701 C
-3964.0977 4159.6782 -3964.8071 4160.4727 -3964.9736 4159.7979 C
-3965.1592 4159.915 -3964.5967 4159.2998 -3965.2249 4159.2646 C
-3965.6455 4159.0103 -3965.7825 4159.6157 -3965.8264 4159.8184 C
-3965.8333 4160.083 -3965.1663 4160.1807 -3965.3977 4160.499 C
-3965.0703 4160.4648 -3964.9399 4160.125 -3964.5212 4160.3799 C
-3964.8457 4160.4121 -3965.2864 4160.9478 -3965.4592 4160.5376 C
-3966.1008 4161.0303 -3966.0088 4162.2705 -3965.7063 4162.3389 C
-3965.7783 4161.9502 -3964.5359 4161.8599 -3965.3772 4161.3535 C
-3964.9993 4160.8535 -3964.3088 4160.8496 -3963.8145 4160.5376 C
-3963.8369 4160.6377 L
-3963.2231 4160.5127 L
-3963.3096 4160.6509 -3963.4951 4160.7695 -3963.5012 4161.0313 C
-3962.6511 4160.3232 L
-3963.1296 4160.7998 -3962.3545 4160.6543 -3962.1367 4160.8643 C
-3962.0457 4160.46 -3961.7136 4160.1641 -3962.0322 4159.9326 C
-3962.3904 4159.6392 -3962.2407 4160.1509 -3962.5664 4160.1816 C
-3962.1052 4159.5449 L
-3962.0657 4159.6064 L
-3961.7881 4159.0854 L
-3961.1599 4159.1221 -3962.0625 4160.2979 -3961.2576 4159.7876 C
-3961.3623 4159.0767 L
-3960.4304 4159.1816 -3959.2336 4159.9814 -3958.5752 4159.6533 C
-3958.7568 4160.0576 -3958.8369 4160.708 -3958.5872 4161.0933 C
-3958.8711 4160.9712 -3959.4417 4160.9966 -3959.8489 4161.063 C
-3959.9272 4160.9385 -3959.3401 4160.2227 -3958.8977 4160.3765 C
-3959.1121 4159.2119 -3960.0105 4161.0791 -3960.0625 4159.8984 C
-3961.1897 4159.4873 -3960.9033 4161.0356 -3961.8601 4160.3433 C
-3961.8733 4160.8701 -3962.1321 4160.6006 -3962.1824 4161.0654 C
-3961.8992 4161.9253 -3960.9033 4161.0356 -3960.2825 4161.3369 C
-3960.3433 4161.375 -3960.4656 4161.4541 -3960.4895 4161.5537 C
-3960.0457 4161.708 -3959.8623 4161.5908 -3959.5522 4161.3955 C
-3959.5913 4161.333 L
-3959.0496 4160.8184 -3959.2561 4161.7261 -3958.9373 4161.958 C
-3958.8137 4161.8799 -3958.3704 4162.0313 -3958.4417 4161.6455 C
-3957.8643 4162.1465 L
-3957.8921 4161.5576 L
-3957.5664 4161.5225 -3957.4951 4161.9121 -3957.2 4161.5537 C
-3957.1863 4161.0269 L
-3957.9951 4160.8438 L
-3957.5852 4160.6719 -3957.8809 4160.3398 -3957.4304 4160.2295 C
-3957.9336 4160.8057 -3957.0745 4160.5215 -3957.0249 4161.0103 C
-3956.6936 4160.7139 L
-3956.7783 4160.8545 L
-3956.5183 4161.125 -3956.4688 4160.6582 -3956.1653 4160.7271 C
-3956.5232 4160.4336 -3956.7576 4160.063 -3957.2136 4160.4375 C
-3956.8816 4160.1416 -3956.2231 4159.8135 -3956.0615 4159.7959 C
-3955.7129 4159.5752 -3955.4695 4159.9766 -3955.1433 4160.0356 C
-3955.7693 4160.2471 -3954.9241 4161.6328 -3956.1785 4161.2544 C
-3956.1553 4161.1533 -3956.0537 4161.1763 -3956.0144 4161.2383 C
-3956.1816 4160.5654 -3956.7664 4161.2803 -3957.0383 4161.5376 C
-3956.9683 4161.9253 -3957.2527 4162.021 -3956.7705 4162.2349 C
-3956.9287 4161.9873 -3956.3643 4161.3716 -3955.9055 4161.6895 C
-3955.9863 4162.5181 L
-3955.3184 4162.6157 L
-3955.3809 4162.6553 L
-3955.1296 4163.1895 -3954.6682 4162.5518 -3954.2083 4162.8662 C
-3953.8762 4162.5703 -3952.6023 4162.8057 -3953.1504 4161.9385 C
-3952.7375 4162.457 -3952.3752 4161.7959 -3951.9248 4161.6846 C
-3952.4863 4161.3462 L
-3951.8225 4160.7524 -3952.0137 4161.1353 -3951.4824 4160.1924 C
-3951.4287 4160.4185 -3951.3103 4160.605 -3951.4182 4160.8438 C
-3950.5264 4160.8877 -3949.2527 4161.1221 -3948.7295 4160.4429 C
-3948.1008 4160.479 -3948.0022 4161.4561 -3947.1201 4161.0728 C
-3946.9343 4160.9561 -3947.2649 4160.2979 -3946.6809 4160.5356 C
-3946.6416 4160.5977 -3947.2432 4161.1504 -3946.5928 4161.0854 C
-3946.1296 4160.4473 -3945.5049 4161.4375 -3944.9023 4160.8843 C
-3944.5842 4161.1143 -3944.0322 4161.0269 -3944.1472 4161.5313 C
-3944.6511 4161.417 -3945.3643 4161.5225 -3945.4729 4161.7646 C
-3945.4033 4161.46 -3945.8313 4161.4692 -3945.46 4161.2349 C
-3946.2217 4160.8535 -3945.9543 4161.5479 -3946.6377 4161.2871 C
-3946.6848 4161.4893 -3946.2864 4161.8457 -3946.1399 4161.665 C
-3946.1367 4162.3545 -3947.4873 4161.998 -3946.8799 4162.8247 C
-3946.1497 4162.8843 -3945.9329 4161.4473 -3945.3 4162.1729 C
-3945.5537 4162.5923 -3945.9504 4162.2373 -3946.2727 4162.9604 C
-3945.7527 4163.2383 L
-3945.3752 4162.7393 L
-3945.3977 4162.8413 L
-3944.4792 4163.4727 -3944.5481 4162.1318 -3943.7263 4161.7856 C
-3944.2024 4161.3076 -3943.6162 4160.5908 -3943.9744 4160.2979 C
-3943.4248 4160.21 -3943.0212 4160.3013 -3943.0176 4160.9912 C
-3944.0457 4161.5537 -3943.0759 4161.7207 -3944.0264 4162.4077 C
-3943.8704 4162.6553 -3944.2527 4163.417 -3943.6863 4163.4932 C
-3943.0481 4163.0015 -3943.8772 4162.9185 -3943.2407 4162.6909 C
-3943.2031 4162.7524 -3943.1641 4162.8145 -3943.1863 4162.916 C
-3942.8936 4162.5576 -3942.8447 4163.0454 -3942.4905 4162.6494 C
-3942.5745 4162.7876 L
-3942.1377 4163.2061 -3942.0967 4162.3135 -3941.7207 4162.7695 C
-3941.8711 4162.2573 -3941.4683 4162.3496 -3941.2351 4162.0303 C
-3941.6162 4161.8369 -3941.8225 4161.1021 -3942.5745 4161.1431 C
-3942.6653 4161.5479 -3942.6104 4161.7725 -3942.9192 4161.9683 C
-3942.4304 4161.9185 L
-3942.5359 4161.9854 -3942.6162 4162.0894 -3942.7129 4162.1709 C
-3943.1824 4161.9604 L
-3942.5872 4161.6719 -3942.8601 4161.2393 -3942.6072 4160.8184 C
-3942.0625 4160.9951 -3942.1577 4160.707 -3941.8152 4160.8389 C
-3941.8496 4161.4326 -3940.7649 4161.8535 -3940.1377 4162.2349 C
-3940.2351 4162.2119 -3940.3608 4162.2271 -3940.4287 4162.2119 C
-3940.8843 4162.5869 -3940.1152 4162.707 -3940.0984 4162.8701 C
-3939.7664 4162.5732 L
-3939.8289 4162.6143 -3939.9153 4162.7524 -3939.7737 4162.8369 C
-3939.3242 4162.7261 -3939.3503 4162.1377 -3938.9016 4162.0264 C
-3938.8679 4162.3535 -3939.2473 4162.8496 -3938.9683 4163.021 C
-3938.8721 4163.3062 -3938.5657 4164.0654 -3937.9695 4163.7764 C
-3937.9272 4163.6509 -3937.7727 4163.5811 -3937.5935 4163.5269 C
-3937.6184 4163.5449 -3937.6497 4163.5576 -3937.6609 4163.5811 C
-3937.2649 4163.9375 L
-3937.6023 4164.4951 -3937.9473 4163.6743 -3938.2864 4164.2344 C
-3938.3152 4164.7646 L
-3938.5791 4164.7661 -3938.9375 4164.9956 -3939.1023 4165.2705 C
-3938.7 4165.3604 -3938.6152 4165.2212 -3938.1653 4165.1108 C
-3938.1023 4165.4463 -3938.4192 4165.6953 -3938.4648 4165.7314 C
-3938.3977 4165.4292 L
-3938.9343 4164.9902 -3939.2 4165.9375 -3939.8679 4165.8389 C
-3939.9688 4165.8174 -3939.9072 4165.7783 -3939.8848 4165.6772 C
-3940.4255 4166.1909 -3940.9561 4165.4873 -3941.4817 4166.165 C
-3941.3103 4165.8853 L
-3941.6682 4166.1108 -3942.3679 4166.6328 -3943.0671 4167.1377 C
-3943.0728 4167.3438 L
-3942.9951 4167.4683 -3943.2576 4167.4604 -3943.3984 4167.3774 C
-3943.3977 4167.374 L
-3943.7483 4167.6265 -3944.0852 4167.8584 -3944.3608 4168.0313 C
-3944.2727 4168.1592 -3944.1599 4168.2661 -3944.0305 4168.2959 C
-3943.9209 4168.0537 -3943.2783 4168.2524 -3943.3665 4167.7017 C
-3943.0696 4168.0342 -3942.5913 4167.5576 -3942.3733 4167.7661 C
-3942.7705 4167.4126 -3942.0967 4167.2471 -3942.0271 4166.9429 C
-3941.8936 4167.291 -3941.4385 4166.917 -3941.4905 4167.3843 C
-3941.4121 4167.5059 -3941.6855 4167.0742 -3941.8545 4167.3545 C
-3942.2705 4167.7896 -3941.0928 4167.7373 -3941.6111 4168.1509 C
-3940.9519 4167.8232 -3940.0833 4167.9648 -3939.4033 4167.5352 C
-3939.7839 4167.3438 L
-3939.4817 4167.4126 -3938.7664 4167.3086 -3938.7129 4167.5342 C
-3938.9375 4167.5889 -3939.2 4167.583 -3939.4873 4167.6768 C
-3939.5012 4168.2041 -3938.7969 4167.6729 -3938.7649 4167.999 C
-3937.9304 4167.1265 L
-3938.2959 4167.0967 L
-3938.0657 4166.7764 -3937.3015 4167.1631 -3936.7351 4167.2373 C
-3937.0601 4167.959 -3937.5896 4167.2559 -3938.1855 4167.5454 C
-3938.6184 4167.8188 -3937.9182 4168.2422 -3938.3279 4168.415 C
-3938.2217 4168.583 -3937.9543 4168.563 -3937.8225 4168.3809 C
-3937.6609 4168.5127 L
-3938.0264 4169.1685 -3938.8457 4169.0225 -3939.3911 4169.5869 C
-3939.3433 4169.5166 -3939.3015 4169.4424 -3939.2864 4169.3662 C
-3939.7063 4169.1118 -3940.1328 4169.1221 -3940.5422 4169.2959 C
-3940.3257 4169.5024 -3940.24 4169.3623 -3940.1162 4169.2856 C
-3940.1008 4169.4478 -3940.4873 4169.5181 -3940.6335 4169.6982 C
-3940.2527 4169.8896 -3940.5625 4170.0854 -3940.3215 4170.1934 C
-3940.5696 4170.3496 -3940.7705 4170.3037 -3941.0728 4170.2349 C
-3941.2295 4169.9873 -3940.9431 4169.8936 -3940.9751 4169.5688 C
-3941.2864 4169.7646 -3941.4287 4168.9873 -3941.8843 4169.3623 C
-3941.2783 4169.499 -3942.0439 4170.0688 -3942.2527 4170.2876 C
-3942.1511 4170.3101 L
-3942.3433 4170.6909 -3942.5063 4170.707 -3942.6392 4170.3584 C
-3942.3911 4170.2017 -3942.1511 4170.3101 -3942.2217 4169.9229 C
-3942.3855 4169.9395 -3942.5488 4169.9561 -3942.7344 4170.0728 C
-3942.5657 4169.7935 L
-3943.3799 4169.874 L
-3943.5088 4170.2158 -3943.7241 4170.6982 -3943.8369 4171.2017 C
-3944.0322 4170.8926 -3944.3042 4171.1504 -3944.4895 4171.2695 C
-3944.4033 4171.1274 L
-3944.7625 4170.8354 -3945.5615 4171.0791 -3945.6289 4171.3809 C
-3945.8855 4171.1118 -3943.8152 4169.457 -3945.6289 4169.7373 C
-3946.3184 4169.7393 -3946.0583 4170.7017 -3946.4519 4171.0356 C
-3946.4297 4170.9375 -3946.4688 4170.874 V
-3946.7705 4170.8037 -3946.8008 4171.1709 -3947.0488 4171.3262 C
-3946.8679 4171.4727 -3946.6057 4171.479 -3946.5212 4171.3398 C
-3946.6121 4171.7432 -3947.1497 4171.3037 -3947.3809 4171.6221 C
-3947.0808 4171 -3947.9641 4171.3848 -3947.7312 4171.0654 C
-3948.3313 4170.665 -3948.9729 4171.1572 -3949.2881 4171.6157 C
-3949.6953 4170.8354 -3950.0022 4171.7192 -3950.6631 4171.3584 C
-3950.5615 4171.3809 -3950.3772 4171.2646 -3950.2351 4171.3486 C
-3949.8584 4170.8535 -3950.9199 4171.0889 -3950.3401 4170.6353 C
-3950.4641 4170.7139 -3950.3489 4170.8984 -3950.2217 4170.8213 C
-3949.9993 4170.7656 -3949.7898 4170.5479 -3949.8457 4170.3223 C
-3950.3843 4169.8843 L
-3950.1963 4169.7646 L
-3951.0137 4169.1582 L
-3951.0359 4169.2573 -3950.9592 4169.3809 -3950.9199 4169.4429 C
-3951.8679 4169.1768 -3952.9519 4169.5142 -3953.7825 4169.4336 C
-3953.9385 4170.8311 -3955.8271 4170.0313 -3956.4983 4170.8896 C
-3956.3184 4170.4893 -3956.22 4169.7822 -3956.3313 4169.4912 C
-3956.1816 4169.4326 -3955.8752 4168.8677 -3955.5359 4168.9854 C
-3955.4817 4169.21 -3955.0625 4169.4639 -3955.3323 4169.7207 C
-3954.3943 4169.5615 -3955.4592 4169.1079 -3955.1824 4168.5879 C
-3956.2217 4168.7236 -3956.8313 4169.542 -3957.4873 4169.8711 C
-3957.5039 4169.7061 L
-3957.9993 4170.0181 L
-3957.5945 4170.1108 -3957.6145 4170.9033 -3958.1362 4170.6265 C
-3958.0728 4170.5869 L
-3958.3704 4170.2544 -3958.9895 4170.6455 -3959.4543 4170.5942 C
-3959.7695 4171.0518 L
-3960.2351 4171 -3960.2551 4170.1475 -3960.4065 4169.6367 C
-3961.1362 4169.5767 -3961.5576 4170.2759 -3962.0759 4170.6909 C
-3962.3103 4170.3188 -3963.4033 4170.2314 -3962.8242 4169.7803 C
-3963.4824 4170.1079 -3963.3496 4172.1006 -3964.4785 4170.9966 C
-3964.1855 4170.6377 L
-3965.2649 4170.7124 -3966.8042 4171.4263 -3967.3015 4171.0488 C
-3966.9033 4169.7598 -3968.6497 4169.7373 -3968.8416 4168.4736 c
-3968.7881 4168.7622 -3969.1936 4168.8584 -3969.2527 4169.0127 C
-3969.3416 4168.8643 -3969.4895 4168.7207 -3969.6465 4168.9814 C
-3969.2256 4169.2349 -3969.9424 4170.2935 -3969.1377 4169.7832 C
-3969.5449 4170.6494 -3970.0696 4171.3262 -3970.9617 4171.2832 C
-3970.9482 4170.7559 L
-3970.2424 4170.916 L
-3970.3137 4170.5269 -3969.9504 4170.5566 -3969.8015 4170.3774 C
-3971.1145 4170.0811 -3969.6296 4169.1431 -3970.9719 4169.2119 C
-3971.1016 4169.5537 -3971.0176 4169.4126 -3971.3665 4169.5479 C
-3971.2024 4169.5303 -3971.1729 4169.167 -3971.4373 4169.1597 C
-3971.6912 4169.5811 L
-3972.1599 4168.7017 -3970.9153 4169.0088 -3971.3152 4168.3911 C
-3970.7969 4167.9771 -3969.8992 4167.7559 -3970.0664 4167.083 C
-3970.9128 4166.8389 -3970.8279 4168.3433 -3971.7129 4168.0376 C
-3971.8071 4167.7515 L
-3972.1184 4167.9463 -3972.1687 4168.4102 -3972.3391 4168.6904 C
-3972.3545 4168.5269 -3972.4336 4168.4053 -3972.6335 4168.3584 C
-3973.1592 4169.0356 -3973.5081 4169.1685 -3973.9929 4169.9077 C
-3972.7024 4169.3535 -3972.8896 4170.4229 -3971.5576 4169.9287 C
-3971.7664 4170.1475 -3972.7041 4170.3076 -3972.7617 4171.0356 C
-3972.7493 4170.5078 L
-3973.1824 4170.7822 -3973.6152 4171.0537 -3974.1592 4170.8799 C
-3973.8271 4170.583 L
-3974.5481 4170.9502 -3975.0256 4169.7822 -3975.5945 4170.6597 C
-3975.3936 4170.707 -3975.2305 4170.6909 -3975.1064 4170.6108 c
-3975.4775 4170.8462 -3975.9431 4170.7935 -3976.3464 4170.7041 C
-3977.1809 4171.5752 L
-3977.1736 4171.3135 -3977.7024 4171.2979 -3977.4473 4170.8799 C
-3978.0481 4170.4785 -3978.3313 4171.2646 -3978.6785 4171.3955 C
-3979.2937 4170.8354 -3978.1455 4171.1455 -3978.0852 4170.417 C
-3978.9329 4170.1729 -3979.8313 4170.3936 -3980.3096 4170.8677 C
-3980.1367 4170.9741 -3980.0527 4171.0654 -3980.0615 4171.1934 C
-3980.0872 4171.0269 -3980.4287 4171.0703 -3980.6191 4171.0654 C
-3980.75 4171.4077 L
-3981.0671 4171.1763 -3981.0225 4170.9741 -3980.7527 4170.7158 C
-3981.0559 4170.6494 -3981.4172 4171.3086 -3981.7295 4170.8145 C
-3981.2119 4170.4014 -3980.5522 4170.7617 -3980.2825 4170.5044 C
-3981.3643 4170.8423 -3981.3711 4169.4604 -3982.7424 4169.8955 C
-3982.7593 4169.7314 -3982.5271 4169.4126 -3982.7913 4169.4077 C
-3983.4033 4169.5342 -3982.9512 4170.1143 -3983.1423 4170.4951 C
-3982.6711 4170.2822 -3982.4519 4170.4912 -3982.1785 4170.9238 C
-3982.3042 4171.2017 L
-3982.3232 4171.0576 -3982.6191 4171.0493 -3982.7063 4170.9102 C
-3982.7825 4171.4771 L
-3982.7473 4170.8496 -3983.2207 4170.3716 -3983.5928 4170.6064 C
-3983.2168 4171.0615 -3983.3184 4171.0376 -3983.2161 4171.7524 C
-3983.7393 4172.4292 -3983.8064 4171.0869 -3984.3928 4171.8037 C
-3984.3489 4171.6021 -3983.8369 4171.4517 -3984.2793 4171.2979 C
-3984.6455 4171.2705 -3984.5967 4171.7593 -3984.8423 4171.915 C
-3984.5657 4171.3926 -3984.6367 4171.0044 -3984.3369 4170.3843 C
-3983.6863 4170.3184 -3984.0745 4170.3911 -3983.4385 4170.1631 C
-3983.9768 4169.7212 L
-3983.4255 4169.6353 -3983.5759 4169.123 -3983.5305 4168.9229 C
-3984.4719 4168.3911 -3984.24 4169.7168 -3984.8457 4169.5796 C
-3985.1377 4169.9385 -3984.2783 4169.6553 -3984.7351 4170.0303 C
-3985.3015 4169.9541 -3984.8643 4170.3716 -3985.5 4170.5977 C
-3985.3936 4170.3584 L
-3985.5879 4170.0479 -3985.78 4170.4307 -3986.0049 4170.4829 C
-3986.2522 4170.6416 -3985.7249 4172.2998 -3986.7417 4172.3354 C
-3986.6919 4172.1895 -3986.6736 4172.0967 -3986.6736 4172.0356 C
-3985.6816 4167.6455 L
-3986.7119 4167.6563 -3987.8992 4167.5342 -3989.0923 4167.2393 C
-3989.3733 4166.3809 -3988.2407 4166.5313 -3988.3137 4166.1455 C
-3987.7695 4166.3213 L
-3987.8 4166.6851 -3988.9097 4166.4336 -3988.4182 4167.0767 C
-3987.4573 4166.8145 -3987.0212 4167.2334 -3986.1096 4166.4829 C
-3986.3928 4165.623 -3987.3103 4166.6353 -3987.9033 4165.9712 C
-3987.6543 4166.0269 -3987.4441 4165.9326 -3987.24 4165.8096 C
-3987.7969 4165.6997 -3988.3928 4165.5811 -3989.0264 4165.4478 C
-3989.1687 4165.6563 L
-3988.7417 4165.7524 -3988.4463 4165.8262 -3988.4082 4165.8574 C
-3988.9744 4165.7822 -3989.4519 4166.2583 -3989.4895 4166.8877 C
-3989.3889 4166.9102 L
-3989.5935 4167.1064 L
-3989.7263 4167.0664 -3989.8591 4167.0269 -3989.9912 4166.9854 C
f
-4026.6936 4166.8369 m
-4026.6592 4166.7764 -4026.6321 4166.7061 -4026.6121 4166.6182 c
-4026.6328 4166.71 -4026.6096 4166.7695 -4026.6936 4166.8369 C
f
0 D
-3978.9033 4164.875 m
-3979.6584 4164.7832 -3980.4199 4164.6118 -3981.1455 4164.5356 C
-3979.8359 4165.7793 -3978.9153 4166.7207 -3981.1008 4166.6963 C
-3981.2439 4166.7856 L
-3980.9583 4166.9385 -3980.4656 4166.957 -3980.0022 4166.8672 C
-3979.6272 4166.4263 -3978.4172 4164.8062 -3978.4304 4164.6631 C
-3978.5632 4164.3145 -3978.7568 4164.6953 -3978.9983 4164.5889 C
-3978.9033 4164.875 L
f
-3978.3665 4166.958 m
-3977.9385 4167.0967 -3978.0359 4166.8213 -3977.9695 4166.5732 C
-3978.1201 4166.605 -3978.2705 4166.6377 -3978.4192 4166.667 C
-3978.3623 4166.7295 -3978.3342 4166.8174 -3978.3665 4166.958 C
f
1 D
-3977.9951 4166.3252 m
-3978.0432 4166.3188 -3978.0842 4166.3076 -3978.1057 4166.2744 C
-3977.9951 4166.3252 L
f
0 D
-3986.3191 4166.0103 m
-3986.3 4166.0044 -3986.2932 4165.999 -3986.2751 4165.9951 C
-3986.3762 4165.9751 -3986.4775 4165.957 -3986.5833 4165.9375 C
-3986.5422 4165.9771 -3986.4641 4166.0078 -3986.3191 4166.0103 C
f
-3985.4504 4166.6182 m
-3985.3489 4166.1641 L
-3985.4431 4166.1475 -3985.5393 4166.1294 -3985.6377 4166.1118 C
-3985.6052 4166.3174 -3985.5713 4166.4966 -3985.4504 4166.6182 C
f
-3982.6584 4168.1118 m
-3982.4824 4167.5664 -3981.8928 4167.542 -3981.8567 4166.9126 C
-3981.8191 4166.7515 -3981.9431 4166.6895 -3982.0823 4166.6377 C
-3982.2375 4166.623 -3982.4033 4166.6055 -3982.5791 4166.5854 C
-3982.5852 4166.6768 -3982.6201 4166.7622 -3982.6785 4166.8438 C
-3982.5049 4166.9229 -3982.3889 4167.0791 -3982.4592 4167.4648 C
-3982.9055 4166.623 -3982.8591 4168.0654 -3983.3416 4167.8496 C
-3983.4951 4168.2935 -3982.8047 4168.2896 -3982.6584 4168.1118 C
f
1 D
-3945.5752 4166.4727 m
-3945.5615 4166.5269 -3945.5144 4166.6685 -3945.4482 4166.8438 C
-3945.7881 4167.1553 L
-3946.3943 4167.0181 -3946.8799 4166.1143 -3947.4255 4166.8916 C
-3947.6809 4166.6963 -3947.8176 4166.2832 -3947.9482 4165.9429 C
-3947.8232 4165.9683 -3947.7063 4166.0015 -3947.6089 4166.0537 C
-3946.0791 4164.915 -3946.8113 4167.2544 -3945.5752 4166.4727 C
f
0 D
-3952.5449 4165.3643 m
-3952.4824 4165.3252 -3952.46 4165.2227 Y
-3953.8145 4166.3774 -3954.9297 4166.7119 -3955.6599 4166.667 C
-3955.5183 4167.125 -3954.8633 4167.479 -3954.5522 4167.6685 C
-3954.8279 4168.1904 L
-3955 4167.7803 L
-3955.4785 4168.2544 L
-3955.3447 4168.605 -3954.9583 4168.5313 -3954.7 4168.8013 C
-3954.6775 4168.7017 -3953.8503 4168.0933 -3953.6191 4167.7725 C
-3954.28 4167.4121 L
-3954.1016 4167.5576 -3953.2249 4167.4375 -3952.8772 4167.3037 C
-3952.8704 4167.042 -3953.4695 4166.6392 -3953.5449 4167.207 C
-3953.6162 4166.8188 -3952.9255 4166.8145 -3953.3623 4166.3984 C
-3952.8447 4165.9854 -3952.0212 4166.3311 -3951.6392 4166.5225 C
-3951.5745 4167.1753 L
-3951.1553 4167.4287 -3951.2913 4166.3896 -3950.7932 4166.7661 C
-3951.4055 4166.8936 -3950.6897 4167.4814 -3951.1768 4167.5303 C
-3951.0212 4167.7764 -3951.1736 4168.2192 -3950.6855 4168.1709 C
-3950.2793 4167.3076 -3950.1711 4168.7119 -3949.7871 4167.9502 C
-3949.5305 4168.2192 -3950.0632 4168.4692 -3949.5583 4168.5854 C
-3948.9792 4168.1318 -3949.0127 4167.8062 -3948.9768 4167.1782 C
-3949.5183 4167.0024 -3949.5852 4167.9951 -3950.0281 4167.8423 C
-3949.1472 4166.7661 L
-3949.3096 4166.6143 -3949.4297 4166.5977 -3949.5305 4166.6416 C
-3949.3535 4166.5791 -3949.2031 4166.4199 -3949.0745 4166.1997 c
-3949.0012 4166.0767 -3948.9336 4165.9712 -3948.8711 4165.8809 C
-3949.3704 4165.875 -3949.8137 4165.8599 -3949.8921 4165.5923 C
-3949.8232 4165.2876 L
-3950 4165.0078 -3950.2881 4165.2271 -3950.4209 4165.4502 C
-3950.8679 4165.4829 -3951.3145 4165.9077 -3951.4121 4165.5132 C
-3951.2424 4165.2344 L
-3951.7922 4165.3223 -3951.8535 4165.3604 -3952.5449 4165.3643 C
f
-3970.5625 4164.6709 m
-3970.2295 4165.7876 -3969.8623 4166.7744 -3968.3081 4166.5791 C
-3968.4304 4166.6563 L
-3967.6472 4167.3574 -3966.9033 4165.7295 -3965.9504 4166.5078 C
-3966.4128 4166.9287 -3966.3879 4166.8896 -3966.8984 4167.8535 C
-3966.4023 4167.5376 L
-3966.5398 4168.1455 -3966.0449 4167.8311 -3965.6809 4167.8599 C
-3966.0022 4168.583 L
-3966.2207 4168.375 -3966.7871 4168.2998 -3966.7705 4168.4648 C
-3966.6465 4168.3848 -3967.5183 4167.5518 -3967.9919 4167.7622 C
-3967.9431 4168.2524 -3966.9431 4168.0537 -3967.3896 4168.8545 C
-3966.9961 4168.5181 -3966.9473 4169.0068 -3966.5359 4168.8354 C
-3966.9304 4169.1709 -3966.6335 4169.5024 -3966.9272 4169.8599 C
-3966.2527 4169.6934 L
-3966.2351 4169.8564 -3967.2351 4170.0557 -3966.6824 4170.6582 C
-3966.4121 4170.4014 -3965.6904 4170.7236 -3965.6775 4170.1963 C
-3965.6609 4170.3584 L
-3965.1553 4170.4727 -3965.4385 4169.6118 -3964.8176 4169.9126 C
-3964.8103 4169.6475 -3964.9287 4169.4639 -3965.1511 4169.5181 C
-3965.3391 4169.6353 -3965.3679 4169.999 -3965.7551 4170.0728 C
-3965.9287 4169.6597 -3965.2881 4170.124 -3965.5569 4169.4263 c
-3965.6904 4169.0791 -3966.5791 4169.7261 -3966.2959 4168.9424 C
-3965.7913 4169.0557 L
-3965.7783 4168.5269 -3965.4128 4168.5576 -3965.4231 4168.1318 C
-3965.1145 4167.9375 -3964.8232 4168.5313 -3964.5081 4168.0728 C
-3964.3772 4167.7314 -3964.6057 4167.0967 -3964.0842 4167.373 C
-3963.6768 4168.1543 -3962.4761 4168.0024 -3962.0264 4167.8896 C
-3961.6328 4167.5537 L
-3961.6663 4167.2295 -3962.3848 4167.5977 -3962.1321 4167.1768 C
-3961.5183 4167.0493 L
-3961.5657 4167.2524 L
-3961.3623 4167.2979 -3961.1543 4167.0796 -3960.9688 4166.9639 C
-3961.1599 4167.3438 -3961.6023 4167.1909 -3961.5144 4167.7412 C
-3961.2263 4167.8496 -3961.1824 4168.0537 -3960.9172 4167.9478 C
-3960.9751 4167.9873 -3961.0249 4168.041 -3961.0176 4168.1182 C
-3960.4343 4168.3564 -3960.4543 4167.5024 -3960.3081 4167.3232 c
-3959.7217 4166.6084 -3960.8992 4166.6597 -3960.8242 4166.0933 C
-3959.1121 4165.791 L
-3959.2583 4165.9692 -3959.4055 4166.1475 -3959.3503 4166.373 C
-3958.9304 4166.6274 -3959.3408 4166.7998 -3958.7512 4166.7734 C
-3958.7932 4166.0215 -3958.0088 4166.3047 -3957.5923 4165.8701 C
-3957.3977 4166.1782 -3957.3577 4166.2393 -3957.7832 4166.249 C
-3957.7344 4166.7373 -3957.1631 4166.5493 -3956.96 4166.5942 C
-3956.8423 4166.4727 -3956.6416 4166.4019 -3956.5144 4166.2935 C
-3956.6848 4166.0493 -3956.6121 4165.7437 -3956.2432 4165.5356 C
-3956.2217 4165.4336 L
-3956.8264 4165.2998 -3957.7664 4164.7661 -3958.1455 4165.2661 C
-3958.0383 4165.0244 L
-3958.7383 4164.6021 -3959.5615 4165.9014 -3959.8843 4164.979 C
-3959.8545 4164.6143 -3960.0249 4164.8955 -3960.0127 4164.3677 C
-3960.5281 4164.7803 L
-3960.4209 4164.541 L
-3961.2976 4164.6597 L
-3961.2744 4164.5615 L
-3961.6912 4165.0391 -3962.0176 4165.4287 -3962.2783 4165.7471 C
-3962.2793 4165.9771 -3962.2522 4166.0479 -3962.3911 4166.2173 C
-3962.5305 4166.3311 -3962.6362 4166.3486 -3962.7305 4166.3184 C
-3962.7312 4166.3188 -3962.7312 4166.3188 -3962.7312 4166.3213 C
-3962.7312 4166.3188 -3962.7312 4166.3188 -3962.7312 4166.3184 C
-3962.9463 4166.2515 -3963.0896 4165.9209 -3963.3545 4165.7856 C
-3962.5393 4165.7295 L
-3962.4729 4165.3389 -3962.5422 4164.9336 -3962.9417 4164.6597 C
-3962.7783 4164.6455 -3962.71 4164.3408 -3962.9121 4164.2959 C
-3962.9343 4164.3975 -3963.4463 4164.5454 -3963.2512 4164.8564 C
-3964.0256 4164.999 -3965.2793 4163.9736 -3966.4551 4164.7158 C
-3965.6104 4164.2695 -3967.1321 4164.1924 -3966.1943 4164.0313 C
-3966.8489 4163.4072 -3966.7576 4164.6475 -3967.4248 4164.5493 C
-3967.4817 4164.3252 -3967.0615 4164.5791 -3966.9082 4164.1353 C
-3968.0176 4163.8853 -3968.78 4165.1455 -3969.8533 4164.9561 C
-3969.8992 4164.4688 L
-3970.1023 4164.5313 -3970.3279 4164.6006 -3970.5625 4164.6709 C
f
-3972.6855 4165.2783 m
-3972.8921 4165.333 -3973.1016 4165.3896 -3973.3145 4165.4463 C
-3973.2937 4165.4541 -3973.2744 4165.4541 -3973.2527 4165.4604 C
-3973.8733 4165.8535 L
-3973.4919 4166.0435 -3973.2407 4166.5791 -3973.7744 4166.8286 C
-3973.7295 4166.6274 -3973.8855 4166.3799 -3973.7 4166.2622 C
-3974.0576 4165.9692 -3974.8423 4165.6865 -3974.6377 4166.4229 C
-3973.9504 4165.7271 -3974.4775 4167.3604 -3973.9375 4166.8438 C
-3974.2273 4167.3232 -3974.5144 4167.1079 -3974.7881 4167.3223 C
-3974.5032 4166.9209 -3974.8545 4166.4126 -3975.2825 4166.2212 C
-3975.4688 4166.3398 -3975.9729 4166.2261 -3976.2825 4166.4209 C
-3976.1721 4166.8711 -3976.4417 4167.1289 -3975.9373 4167.2422 C
-3976.1223 4167.3604 -3976.4087 4167.4541 -3976.7295 4167.2227 C
-3976.6023 4167.1455 -3976.3799 4167.0894 -3976.3953 4166.9272 C
-3976.6023 4166.5127 -3976.8447 4166.5313 -3976.9785 4166.3545 C
-3977.0852 4166.3799 -3977.1929 4166.4019 -3977.2976 4166.4263 C
-3977.2664 4166.4648 -3977.2393 4166.5166 -3977.22 4166.5811 C
-3977.5745 4166.9785 L
-3977.1023 4166.7661 -3977.3562 4167.1865 -3977.3623 4167.4502 c
-3977.3496 4166.9229 -3977.6663 4167.3809 -3977.8279 4167.3984 C
-3977.4768 4167.9561 L
-3977.6465 4168.2349 -3978.0759 4167.5537 -3977.9873 4168.105 C
-3977.2424 4168.3262 -3976.9561 4168.2314 -3976.2825 4168.0654 C
-3976.5559 4167.6328 L
-3975.7959 4167.3267 -3976.0872 4168.375 -3975.2344 4168.3545 C
-3974.8799 4167.959 -3973.9519 4168.3267 -3973.9343 4167.5352 C
-3974.0413 4167.7764 -3973.4033 4168.2393 -3973.1111 4167.8809 C
-3972.7881 4167.1572 -3971.8113 4167.0596 -3972.1072 4166.7295 C
-3972.3711 4166.7207 -3972.7263 4167.1182 -3972.9385 4166.6475 C
-3972.4265 4166.4966 L
-3972.7625 4166.1021 L
-3972.5889 4166.2437 -3972.6057 4165.8584 -3972.6855 4165.2783 C
f
1 D
-3984.1455 4160.8389 m
-3984.1511 4160.8354 -3984.1584 4160.833 -3984.1653 4160.8286 C
-3984.1577 4160.8311 -3984.1504 4160.8311 -3984.1433 4160.8311 C
-3984.1455 4160.8389 L
f
*U
0 D
-3937.9968 4164.8311 m
-3937.8496 4164.6509 -3937.4856 4164.6807 -3937.5569 4164.2935 C
-3937.5481 4164.7192 -3938.2073 4164.3584 -3937.9968 4164.8311 C
f
-3937.5615 4165.248 m
-3937.5359 4165.1465 -3937.5537 4164.9829 -3937.3904 4164.9683 C
-3937.8401 4165.0767 L
-3937.5615 4165.248 L
f
-3937.1052 4168.1597 m
-3936.8733 4167.8423 -3936.7263 4167.6631 -3936.3623 4167.6919 C
-3936.2256 4168.7314 -3936.9583 4167.9824 -3937.1233 4168.9517 C
-3936.4561 4169.0493 -3936.2512 4168.1416 -3935.7024 4168.0537 C
-3935.9744 4167.6201 -3937.0852 4167.3701 -3937.1052 4168.1597 C
f
-3937.4016 4169.4736 m
-3937.0305 4169.2393 L
-3937.0671 4169.1782 L
-3937.4385 4169.4126 L
-3937.4016 4169.4736 L
f
-3945.4385 4160.4429 m
-3945.4719 4160.1182 -3945.7031 4160.4385 -3945.8271 4160.5166 C
-3945.7263 4160.5376 -3945.5852 4160.623 -3945.4385 4160.4429 C
f
-4018.3503 4160.105 m
-4021.1809 4160.4185 L
-4020.3665 4160.3369 -4019.6145 4160.2959 -4018.3503 4160.105 C
f
-3954.8313 4162.5664 m
-3954.0713 4162.2603 -3953.7336 4161.6997 -3952.9592 4161.5576 C
-3953.9775 4160.9033 -3954.3042 4162.5796 -3955.1592 4161.9092 C
-3954.8313 4162.5664 L
f
-3954.5632 4159.9751 m
-3954.4373 4160.5869 -3955.1497 4160.6919 -3955.0393 4161.1406 C
-3954.5271 4160.9912 -3954.8008 4160.5576 -3954.3359 4160.6104 C
-3954.5632 4159.9751 L
f
-3951.1191 4170.0889 m
-3951.3496 4170.4072 L
-3951.1641 4170.291 L
-3951.1191 4170.0889 L
f
-3958.0271 4160.5181 m
-3957.9431 4160.3799 L
-3958.3242 4160.1865 L
-3958.0271 4160.5181 L
f
-3957.8591 4160.2393 m
-3957.9431 4160.3799 L
-3957.9431 4160.3799 L
-3957.8591 4160.2393 L
f
-3951.4153 4171.4014 m
-3951.0728 4171.5313 L
-3950.9033 4171.2515 L
-3951.4153 4171.4014 L
f
-3954.4385 4168.1187 m
-3954.1321 4167.9229 L
-3954.1929 4167.9604 -3954.6121 4167.709 -3954.4385 4168.1187 C
f
-3960.3545 4160.2583 m
-3960.7273 4160.4932 L
-3960.6892 4160.5537 L
-3960.3176 4160.3188 L
-3960.3545 4160.2583 L
f
-3956.8369 4169.8057 m
-3956.6252 4170.2759 -3957.4482 4169.9326 -3957.0127 4170.3486 C
-3956.6252 4170.2759 -3956.7825 4170.0303 -3956.8369 4169.8057 C
f
-3961.3352 4166.6157 m
-3961.3855 4166.6157 -3961.4385 4166.6328 -3961.4895 4166.6851 C
-3961.4287 4166.665 -3961.3777 4166.6406 -3961.3352 4166.6157 C
f
-3961.3352 4166.6157 m
-3961.1729 4166.6157 -3961.0105 4166.7959 -3960.8992 4166.6597 C
-3961.1016 4166.4473 -3961.1753 4166.5269 -3961.3352 4166.6157 C
f
-3963.1953 4166.7256 m
-3963.0481 4166.7593 L
-3963.1985 4166.9912 -3963.1272 4166.957 -3962.9929 4166.7705 C
-3962.8369 4166.7544 -3962.8457 4166.6055 -3962.8271 4166.5039 C
-3962.7959 4166.4473 -3962.7649 4166.3853 -3962.7312 4166.3213 C
-3962.7793 4166.3809 -3962.8225 4166.4404 -3962.8591 4166.4912 C
-3963.1008 4166.4873 -3963.2483 4166.5103 -3963.1953 4166.7256 C
f
-3970.1052 4158.7998 m
-3969.5615 4158.9751 -3969.4209 4159.0596 -3969.4504 4159.4248 C
-3968.9343 4159.541 -3969.0144 4158.9126 -3968.7031 4158.7661 C
-3969.2871 4158.8369 -3969.4065 4158.6685 -3970.1052 4158.7998 C
f
-3968.7031 4158.7661 m
-3968.6377 4158.7593 -3968.5752 4158.7515 -3968.4993 4158.7373 C
-3968.5842 4158.7261 -3968.6472 4158.7412 -3968.7031 4158.7661 C
f
-3961.0212 4170.7173 m
-3961.3591 4171.2759 L
-3961.2351 4171.1982 L
-3961.0212 4170.7173 L
f
-3970.9121 4158.6157 m
-3970.8113 4158.6392 -3970.6497 4158.623 -3970.5703 4158.748 C
-3970.5413 4158.3809 -3971.0127 4158.5933 -3970.9121 4158.6157 c
f
-3968.8152 4165.7744 m
-3968.76 4165.998 -3968.4121 4165.8643 -3968.2705 4165.9502 C
-3968.4736 4165.9033 -3968.6392 4165.23 -3968.8152 4165.7744 C
f
-3972.4719 4160.1221 m
-3972.3711 4160.1455 -3972.2161 4160.3911 -3972.2832 4160.6934 C
-3972.1367 4160.5142 -3971.9385 4159.8701 -3972.4719 4160.1221 C
f
-3969.8088 4165.709 m
-3969.7312 4165.833 L
-3969.3591 4165.5977 L
-3969.8088 4165.709 L
f
-3968.4817 4171.1006 m
-3968.0632 4170.665 -3969.1455 4170.0493 -3968.4248 4169.6807 C
-3969.3545 4169.2246 -3968.3535 4170.2979 -3969.0393 4170.2271 C
-3968.6377 4170.374 -3968.4409 4170.9253 -3968.4817 4171.1006 C
f
-3969.0393 4170.2271 m
-3969.0977 4170.2041 -3969.1609 4170.1909 -3969.2295 4170.1895 C
-3969.1536 4170.21 -3969.0923 4170.2212 -3969.0393 4170.2271 C
f
-3974.9287 4167.4692 m
-3974.8679 4167.4238 -3974.8264 4167.374 -3974.7881 4167.3223 C
-3974.8359 4167.3584 -3974.8816 4167.4033 -3974.9287 4167.4692 C
f
-3971.2295 4170.5869 m
-3970.6023 4169.9326 L
-3971.0212 4170.3677 -3972.0752 4170.3413 -3972.0095 4170.9927 C
-3971.6682 4171.125 -3971.2576 4170.9517 -3971.0889 4170.6709 C
-3971.2295 4170.5869 L
f
-3978.4287 4158.7764 m
-3978.1577 4158.5181 L
-3978.4961 4158.4424 L
-3978.3992 4158.54 -3978.5745 4159.0181 -3978.4287 4158.7764 C
f
-3978.5615 4158.4287 m
-3978.4961 4158.4424 L
-3978.5105 4158.4263 -3978.5313 4158.4199 -3978.5615 4158.4287 C
f
-3973.7424 4167.1543 m
-3973.5398 4167.1997 -3973.3777 4167.1816 -3973.1929 4167.0664 C
-3973.2695 4166.9429 -3973.7744 4166.8286 -3973.7424 4167.1543 C
f
-3980.3369 4159.7236 m
-3979.8896 4159.6118 L
-3980.3777 4159.6597 L
-3980.3369 4159.7236 L
f
-3982.4241 4158.6157 m
-3982.5012 4158.4932 L
-3982.8721 4158.7271 L
-3982.7937 4158.8496 L
-3982.4241 4158.6157 L
f
-3979.6943 4171.4326 m
-3979.3911 4171.5024 -3979.1543 4170.917 -3979.2336 4170.7935 C
-3979.8215 4170.8188 L
-3979.6721 4171.3311 -3979.6584 4170.8037 -3979.3176 4170.9336 C
-3979.6943 4171.4326 L
f
-3997.9153 4159.5732 m
-3997.7839 4159.2314 -3997.1409 4159.4292 -3997.1072 4159.7544 C
-3997.1936 4159.8955 -3997.5422 4160.0303 -3997.3232 4160.2373 C
-3996.8145 4159.3975 L
-3996.1377 4159.9209 -3997.3289 4160.5015 -3997.6631 4160.7979 C
-3996.9736 4160.9063 -3996.7693 4160.3545 -3996.0359 4160.3574 C
-3996.2522 4160.2822 -3996.3889 4160.0728 -3996.5032 4159.8926 C
-3996.5281 4159.3013 -3995.8447 4159.563 -3995.3562 4159.5166 C
-3995.6672 4159.2598 -3995.4873 4159.0435 -3995.2607 4158.8115 C
-3995.22 4158.7935 -3995.1929 4158.7593 -3995.1736 4158.7192 C
-3995.1472 4158.6919 -3995.1223 4158.665 -3995.0967 4158.6367 C
-3995.1553 4158.6377 L
-3995.1511 4158.5713 -3995.1641 4158.4912 -3995.2063 4158.3809 C
-3995.6162 4158.5537 -3995.9297 4158.0596 -3996.1936 4158.0518 C
-3995.9329 4159.0132 -3997.0923 4158.2744 -3997.4241 4158.5703 C
-3997.8071 4158.665 L
-3997.9504 4158.667 L
-3997.9792 4158.5615 -3997.9385 4158.4292 -3997.72 4158.2393 C
-3997.9023 4158.4287 -3998.5105 4158.3623 -3998.4543 4158.6709 C
-3999.8423 4158.6846 L
-3999.8855 4158.6455 -3999.9287 4158.5967 -3999.9607 4158.5269 C
-4000.0088 4158.5879 -4000.0168 4158.6377 -4000.0105 4158.6865 C
-4006.0576 4158.748 L
-4005.7593 4158.8232 -4005.5012 4159.0435 -4005.1936 4159.1494 C
-4005.6553 4159.7876 -4004.6892 4159.2646 -4004.8247 4159.8677 C
-4005.0322 4160.0869 -4005.3359 4160.0181 -4005.5168 4159.8716 C
-4005.5842 4160.1763 -4005.3264 4160.4463 -4005.3562 4160.8101 C
-4004.5935 4161.1934 -4004.4768 4159.7349 -4003.7312 4159.957 C
-4003.7607 4160.3223 -4003.9912 4160.6416 -4003.5032 4160.5923 C
-4003.6272 4160.6709 L
-4002.8457 4160.2622 -4003.0183 4161.4966 -4002.5264 4160.4951 C
-4002.5393 4161.0225 L
-4002.1848 4160.625 -4001.4951 4160.6221 -4001.1064 4160.5493 C
-4001.1296 4160.6509 L
-4000.0393 4160.0479 -4000.5176 4160.5225 -3999.2932 4160.2705 C
-3999.8567 4160.8853 L
-3999.4343 4161.1396 -3999.3391 4160.4712 -3999.0359 4160.54 C
-3999.0576 4160.6416 -3998.9873 4161.0269 -3999.2737 4161.123 C
-3997.7881 4160.1851 L
-3997.4336 4159.7876 -3997.8601 4159.7979 -3997.9153 4159.5732 C
f
-3996.0359 4160.3574 m
-3995.9573 4160.3853 -3995.8679 4160.3975 -3995.7625 4160.3774 C
-3995.8643 4160.3604 -3995.9519 4160.3574 -3996.0359 4160.3574 C
f
-4006.4824 4158.7524 m
-4006.0576 4158.748 L
-4006.1892 4158.7158 -4006.3264 4158.7061 -4006.4824 4158.7524 C
f
-3993.9065 4159.2061 m
-3994.1641 4158.9336 -3993.7136 4158.8247 -3993.6687 4158.6221 C
-3994.5913 4158.6318 L
-3994.5872 4158.8354 -3994.6785 4159.0625 -3994.6599 4159.248 C
-3993.9065 4159.2061 L
f
-3994.8584 4158.249 m
-3994.8896 4158.3896 -3994.9873 4158.5166 -3995.0967 4158.6367 C
-3994.5913 4158.6318 L
-3994.5945 4158.479 -3994.6511 4158.3408 -3994.8584 4158.249 C
f
-3994.7607 4169.0894 m
-3994.9241 4169.1079 L
-3995.1711 4169.2646 L
-3994.7607 4169.0894 L
f
-3997.3152 4168.1963 m
-3997.1201 4168.5044 -3996.75 4168.2705 -3996.6262 4168.1924 C
-3997.0527 4168.2017 -3996.8679 4168.0854 -3997.3152 4168.1963 C
f
-3996.7881 4171.4966 m
-3997.1992 4171.6709 L
-3997.1609 4171.7314 L
-3996.7881 4171.4966 L
f
-4009.6223 4160.8281 m
-4009.6897 4160.8398 -4009.7551 4160.8486 -4009.8232 4160.8623 C
-4009.7312 4160.8643 -4009.6711 4160.8496 -4009.6223 4160.8281 C
f
-4006.0945 4160.3252 m
-4007.0752 4159.7334 -4005.4519 4159.833 -4005.76 4159.0752 C
-4006.2937 4159.3262 L
-4006.2483 4159.123 L
-4006.8992 4159.1895 L
-4006.7656 4159.5376 -4006.6653 4159.5591 -4006.6943 4159.9248 C
-4007.5632 4159.7822 -4006.9683 4159.4912 -4007.6057 4159.0303 C
-4008.5769 4159.0967 L
-4008.4983 4158.9873 L
-4008.5801 4158.9951 -4008.6162 4159.041 -4008.6443 4159.1006 C
-4011.9172 4159.3281 L
-4012.5127 4159.6182 -4011.5879 4159.9854 -4012.0271 4160.5225 C
-4011.3369 4160.521 -4010.3113 4160.9102 -4010.2527 4160.1816 C
-4010.2759 4160.2822 -4010.3215 4160.4829 -4010.1816 4160.5688 C
-4009.7825 4159.9692 L
-4010.1631 4159.7783 L
-4009.7617 4159.1807 -4008.4656 4159.3135 -4008.2312 4159.6846 C
-4008.9683 4159.8887 -4008.5984 4160.6084 -4009.6252 4160.2173 C
-4009.5791 4160.4019 -4009.3911 4160.7271 -4009.6223 4160.8281 C
-4008.4192 4160.6157 -4007.3408 4160.9478 -4006.0945 4160.3252 C
f
-4018.1631 4160.6763 m
-4018.1536 4160.6104 L
-4018.1753 4160.6455 -4018.1824 4160.6719 -4018.1631 4160.6763 C
f
-4017.7593 4160.7661 m
-4017.1729 4160.0518 L
-4018.0872 4160.1094 L
-4018.1536 4160.6104 L
-4018.0728 4160.4829 -4017.7522 4160.2295 -4017.6279 4160.4253 C
-4017.7593 4160.7661 L
f
-4016.4919 4159.6201 m
-4016.9641 4159.833 -4016.9385 4160.4229 -4016.6809 4160.6919 C
-4017.1145 4160.9648 -4016.9097 4160.0576 -4017.2083 4160.6807 C
-4017.1985 4161.1064 -4016.6641 4160.8564 -4016.5413 4160.7783 C
-4016.4919 4159.6201 L
f
-4013.0081 4159.9307 m
-4013.1409 4160.1753 L
-4012.8137 4160.2393 L
-4013.0081 4159.9307 L
f
-4013.1409 4160.1753 m
-4013.4656 4160.1094 L
-4013.4431 4160.291 -4013.4209 4160.4683 -4013.3679 4160.5923 C
-4013.1409 4160.1753 L
f
-4014.3176 4159.9395 m
-4014.4551 4159.8955 -4014.6072 4159.8623 -4014.7922 4159.8462 C
-4014.3176 4159.9395 L
f
-4013.9463 4160.0894 m
-4013.9573 4160.0127 L
-4014.3176 4159.9395 L
-4014.1848 4159.9854 -4014.0657 4160.0356 -4013.9463 4160.0894 C
f
-4013.4656 4160.1094 m
-4013.5183 4159.6963 -4013.5801 4159.2622 -4014.0496 4159.3774 C
-4013.9573 4160.0127 L
-4013.4656 4160.1094 L
f
-3999.7783 4170.874 m
-4000.1497 4171.1079 L
-4000.1104 4171.1719 L
-3999.7393 4170.9375 L
-3999.7783 4170.874 L
f
-4001.9209 4170.4966 m
-4002.0127 4170.5688 -4002.0823 4170.6455 -4002.1455 4170.7236 C
-4002.0488 4170.6782 -4001.9719 4170.6094 -4001.9209 4170.4966 C
f
-4003.5137 4173.3188 m
-4003.9504 4172.9033 -4002.9111 4172.7695 -4003.72 4172.5854 C
-4003.7913 4172.1982 -4003.4121 4171.6992 -4003.0313 4171.8916 C
-4003.0615 4172.2559 -4003.4023 4172.125 -4003.1682 4172.4966 C
-4002.9153 4172.0752 -4002.8191 4172.3623 -4002.9072 4171.8135 C
-4002.4817 4171.4712 -4002.4343 4171.0811 -4002.1455 4170.7236 C
-4002.6599 4170.9648 -4003.74 4170.4019 -4004.3928 4171.1064 C
-4004.7527 4171.7661 -4004.5344 4172.667 -4004.5359 4173.6201 C
-4004.4817 4173.8438 -4003.5488 4173.9502 -4003.5137 4173.3188 C
f
-4002.8264 4174.2705 m
-4002.6243 4174.3174 -4002.5625 4174.2793 -4002.4385 4174.1997 C
-4002.4719 4173.874 -4002.6631 4174.2559 -4002.8264 4174.2705 C
f
-4007.4719 4167.0942 m
-4007.5105 4167.2295 -4007.8762 4167.3975 -4007.7976 4167.6318 C
-4007.2432 4167.4604 L
-4007.3733 4167.4385 -4007.4192 4167.2725 -4007.4719 4167.0942 C
f
-4007 4167.3877 m
-4007.2432 4167.4604 L
-4007.1824 4167.4727 -4007.1072 4167.4541 -4007 4167.3877 C
f
-4007.4983 4167.0093 m
-4007.4895 4167.0376 -4007.4817 4167.0664 -4007.4719 4167.0942 C
-4007.4641 4167.0654 -4007.4656 4167.0356 -4007.4983 4167.0093 C
f
-4015.6631 4159.7017 m
-4015.6553 4159.4404 -4015.9023 4159.5967 -4016.0264 4159.6743 C
-4015.9255 4159.6963 -4015.7839 4159.7822 -4015.6631 4159.7017 C
f
-4024.9641 4160.7314 m
-4025.1824 4160.5225 L
-4025.1052 4160.6475 -4025.0657 4160.709 -4024.9641 4160.7314 C
f
-4028.3279 4167.8765 m
-4028.3342 4167.9272 -4028.3503 4167.9692 -4028.3721 4168.0093 C
-4028.3503 4167.9771 -4028.3352 4167.9336 -4028.3279 4167.8765 c
f
-4028.3721 4168.0093 m
-4028.5212 4168.2271 -4028.9817 4167.8887 -4029.1472 4168.2192 C
-4029.1262 4168.1187 L
-4029.4343 4168.3145 L
-4029.1455 4168.2856 -4028.5393 4168.3267 -4028.3721 4168.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7900.4521 8045.5977 m
-7508.6909 8045.5977 L
-7508.6909 7953.9082 L
-7900.4521 7953.9082 L
-7900.4521 8045.5977 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-7513.3535 7987.9209 m
-7515.1113 7987.9209 -7634.7817 7990.0918 -7710.6519 7991.4717 C
-7731.4663 7990.5352 -7752.2529 7989.2227 -7773.0547 7987.502 C
-7775.5327 7987.1514 -7778.3472 7986.7949 -7779.8584 7986.6006 c
-7780.7114 7986.4863 -7781.5732 7986.3857 -7782.4375 7986.293 C
-7781.9829 7986.0605 -7781.54 7985.7998 -7781.1167 7985.4941 C
-7780.25 7984.7324 -7779.3955 7983.832 -7778.8735 7982.4541 C
-7778.8979 7982.1689 -7778.6997 7981.8193 -7778.6523 7981.5293 c
-7778.5532 7980.9121 -7778.6382 7980.1631 -7778.7319 7979.627 c
-7778.7939 7979.2725 -7778.9551 7979.0254 -7779.0259 7978.7314 c
-7779.0488 7978.6348 -7778.9785 7978.5762 -7779.0059 7978.502 c
-7779.1396 7978.1484 -7779.5313 7977.5518 -7779.7539 7977.2266 c
-7779.8579 7977.0762 -7779.9873 7976.9775 -7780.1035 7976.8193 c
-7780.1196 7976.7969 -7780.0669 7976.7354 -7780.0928 7976.7061 c
-7780.6484 7976.0664 -7781.4312 7975.541 -7782.3955 7975.0762 c
-7782.4546 7975.0508 -7782.4639 7975.1445 -7782.5366 7975.0869 C
-7782.8213 7974.9658 -7783.1143 7974.8535 -7783.3945 7974.791 c
-7784.8965 7974.4629 -7786.7163 7974.8477 -7787.8027 7975.6328 c
-7788.7998 7976.3555 -7789.5308 7977.8623 -7789.4678 7979.0742 c
-7789.4126 7980.1094 -7788.6665 7981.2578 -7787.4458 7982.0352 c
-7786.3604 7982.7295 -7785.0479 7982.9834 -7784.2373 7982.3594 C
-7784.6499 7982.2295 -7784.9688 7982.0332 -7785.0811 7981.7529 C
-7785.0908 7981.4766 -7785.0967 7981.1992 -7784.8755 7980.8594 C
-7784.4517 7980.4863 -7783.7925 7980.248 -7783.1235 7980.7158 c
-7782.1846 7981.3701 -7782.0728 7982.7891 -7783.0342 7983.5361 C
-7783.3086 7983.6406 -7783.5586 7983.8789 -7783.75 7983.9834 c
-7784.1826 7984.2188 -7784.5586 7984.3857 -7784.9751 7984.543 c
-7786.0938 7984.959 -7787.4839 7985.418 -7788.5327 7985.5977 c
-7788.7114 7985.6289 -7788.8989 7985.6475 -7789.0806 7985.6738 C
-7792.4038 7985.3789 -7795.54 7985.0693 -7798.1416 7984.5264 C
-7798.1138 7984.5234 -7798.0908 7984.5244 -7798.0586 7984.5205 c
-7797.2378 7984.4199 -7796.6309 7984.2529 -7795.9043 7984.0137 c
-7795.6328 7983.9238 -7795.3184 7983.9121 -7795.0825 7983.8154 c
-7794.9985 7983.7852 -7794.9409 7983.6602 -7794.8472 7983.6133 c
-7794.5371 7983.4609 -7794.2129 7983.3662 -7793.8999 7983.1602 c
-7792.9097 7982.5059 -7791.8774 7981.3359 -7791.7617 7979.8682 C
-7791.9463 7978.8262 -7792.3643 7977.8525 -7793.5938 7977.0781 c
-7793.7217 7976.9961 -7793.8662 7976.96 -7793.9995 7976.8828 C
-7795.8516 7976.2168 -7797.5913 7977.3135 -7797.8066 7979.2061 C
-7797.7119 7979.375 -7797.6499 7979.5527 -7797.6616 7979.752 C
-7797.2939 7980.4492 -7795.9033 7981.0557 -7795.3057 7980.6143 C
-7795.6133 7980.5566 -7795.7495 7980.5254 -7795.8638 7980.2637 C
-7795.8892 7979.6074 -7795.0679 7979.4336 -7794.6528 7980.0176 C
-7794.4966 7980.7021 -7794.7676 7981.2529 -7795.2939 7981.8105 c
-7795.5068 7982.0361 -7795.7837 7982.1689 -7796.0566 7982.3545 c
-7796.4199 7982.6016 -7796.7495 7982.8828 -7797.1118 7983.0332 c
-7797.4385 7983.1689 -7797.8115 7983.2012 -7798.1445 7983.2891 c
-7798.2349 7983.3105 -7798.2969 7983.3613 -7798.3706 7983.3789 c
-7798.6274 7983.4336 -7798.8359 7983.5146 -7799.0879 7983.5469 c
-7799.4209 7983.585 -7799.7739 7983.5488 -7800.1528 7983.585 c
-7800.3398 7983.6055 -7800.5195 7983.6953 -7800.7144 7983.7109 c
-7800.8413 7983.7207 -7800.9722 7983.7207 -7801.1025 7983.7227 C
-7803.8135 7982.8213 -7806.0957 7981.6094 -7807.9814 7979.2793 c
-7811.6704 7974.7227 -7806.0415 7970.5566 -7804.9902 7974.5977 C
-7806.9668 7976.0361 -7810.5874 7979.1201 -7802.8892 7979.2471 C
-7794.6045 7977.7549 -7801.6982 7962.4922 -7811.6509 7966.5576 c
-7820.0151 7969.9746 -7816.1328 7978.6387 -7810.4658 7982.293 c
-7801.9902 7987.7559 -7792.5376 7988.4922 -7782.7012 7988.584 C
-7793.3862 7993.0488 -7807.9243 7990.4033 -7815.9897 7982.3809 c
-7820.1011 7978.293 -7824.0435 7971.9912 -7822.8193 7965.8896 c
-7821.5742 7959.6816 -7815.1616 7965.4238 -7820.0957 7965.4424 C
-7819.8896 7971.0059 -7806.6387 7964.9648 -7812.9307 7956.8281 c
-7818.6011 7949.4922 -7828.5698 7957.5225 -7830.3242 7963.9482 c
-7836.0239 7984.8359 -7806.3545 7990.7129 -7792.3813 7991.4238 C
-7804.1143 7994.7754 -7820.3892 7992.2734 -7831.5547 7987.7852 c
-7835.9663 7986.0098 -7840.9707 7982.8926 -7843.5479 7978.7773 c
-7847.4619 7972.5264 -7840.4268 7968.2842 -7839.8955 7970.4033 c
-7839.4697 7972.0957 -7845.3765 7972.623 -7840.8267 7975.6992 c
-7836.8091 7978.418 -7833.2759 7972.209 -7832.4619 7969.0781 c
-7828.6782 7954.5322 -7850.0601 7956.4609 -7852.3667 7970.1982 c
-7857.5103 8000.8271 -7811.3071 7994.457 -7795.4902 7993.5928 C
-7795.7124 7993.7617 -7795.9331 7993.9189 -7796.1543 7994.082 C
-7801.4346 7995.585 -7806.6416 7997.7861 -7811.46 8000.5469 C
-7825.9546 8002.2813 -7838.7495 7991.8906 -7854.5913 7986.6152 c
-7863.5635 7983.6289 -7874.0933 7987.9277 -7882.2778 7983.3145 c
-7886.6235 7980.8545 -7889.6982 7978.2656 -7891.2959 7973.0518 C
-7892.9092 7964.1104 -7883.2979 7962.9717 -7885.1396 7967.6416 C
-7886.8428 7967.9688 -7886.1772 7966.834 -7887.3354 7966.8418 C
-7891.2861 7970.5479 -7883.0244 7975.7314 -7879.1606 7972.4316 c
-7872.4497 7966.7031 -7877.2563 7958.332 -7884.0864 7956.0557 C
-7902.5703 7956.25 -7903 7978.8613 -7897.0474 7991.3594 c
-7881.2217 8024.585 -7847.1445 8012.582 -7819.5376 8005.5479 C
-7823.2817 8008.0732 -7825.8975 8011.6426 -7828.5747 8015.2158 c
-7833.2197 8021.416 -7835.6694 8030.8545 -7827.0024 8034.8613 C
-7826.1616 8038.9834 -7824.6392 8042.8857 -7820.5669 8044.7695 c
-7815.7471 8047 -7810.8457 8044.5586 -7809.5508 8039.4512 C
-7809.4766 8036.6729 -7810.1968 8034.8262 -7812.5938 8033.3887 c
-7814.1733 8032.4414 -7819.5176 8032.5313 -7816.8574 8035.5342 C
-7814.9663 8034.041 -7815.1323 8036.4873 -7816.0112 8037.6006 C
-7818.8823 8037.5693 -7819.5771 8035.4873 -7819.5156 8032.5186 c
-7819.5151 8032.4961 -7819.5142 8032.4697 -7819.5146 8032.4434 C
-7819.3574 8025.1367 -7818.1343 8019.3242 -7816.0718 8014.7285 C
-7816.0713 8014.7305 -7816.0708 8014.7314 -7816.0698 8014.7324 c
-7815.8242 8015.2158 -7815.4819 8015.5 -7815.2485 8015.8945 c
-7815.1729 8016.0234 -7815.2495 8016.1387 -7815.1753 8016.2334 c
-7814.8262 8016.6855 -7813.9971 8017.3701 -7813.5313 8017.7402 c
-7813.3135 8017.9121 -7813.0835 8017.998 -7812.8477 8018.1729 c
-7812.8125 8018.1973 -7812.8613 8018.3105 -7812.8115 8018.3418 c
-7811.7256 8019.0176 -7810.3638 8019.4277 -7808.7661 8019.6709 C
-7808.6699 8019.6816 -7808.6978 8019.543 -7808.5669 8019.5938 C
-7808.1035 8019.6406 -7807.6309 8019.6738 -7807.1982 8019.6387 c
-7804.8862 8019.4453 -7802.4316 8018.084 -7801.2129 8016.4668 c
-7800.0942 8014.9854 -7799.7095 8012.4854 -7800.3379 8010.7646 c
-7800.8774 8009.2949 -7802.4629 8007.9697 -7804.5684 8007.3906 c
-7806.4419 8006.873 -7808.4492 8007.084 -7809.3408 8008.3477 C
-7808.6875 8008.3535 -7808.1406 8008.4941 -7807.8545 8008.8477 C
-7807.7178 8009.2422 -7807.5859 8009.6387 -7807.7539 8010.2266 C
-7808.2002 8010.9541 -7809.0469 8011.5898 -7810.2178 8011.2129 c
-7811.4604 8010.8135 -7812.2119 8009.5781 -7812.0532 8008.3486 C
-7806.7505 8002.2031 -7799.0386 7999.6465 -7790.2539 7999.0537 C
-7790.2886 7999.0684 -7790.3218 7999.0801 -7790.3604 7999.0977 c
-7791.5015 7999.6064 -7792.3027 8000.1143 -7793.2437 8000.7832 c
-7793.5957 8001.0332 -7794.0439 8001.1914 -7794.3428 8001.4316 c
-7794.4492 8001.5166 -7794.4766 8001.7227 -7794.5913 8001.8301 c
-7794.9707 8002.1895 -7795.3975 8002.4688 -7795.7563 8002.9063 c
-7796.8945 8004.2891 -7797.8662 8006.4346 -7797.3809 8008.6016 C
-7796.6523 8010.0234 -7795.6162 8011.2441 -7793.4995 8011.8145 c
-7793.2788 8011.875 -7793.0542 8011.8633 -7792.8276 8011.918 C
-7789.8613 8012.0537 -7787.8369 8009.7021 -7788.3667 8006.875 C
-7788.5781 8006.6738 -7788.7471 8006.4434 -7788.8184 8006.1514 C
-7789.6582 8005.3105 -7791.9336 8005.0508 -7792.5996 8005.9521 C
-7792.1309 8005.9004 -7791.9199 8005.8848 -7791.6387 8006.2109 C
-7791.3105 8007.1475 -7792.4189 8007.7617 -7793.2759 8007.1045 C
-7793.8052 8006.1865 -7793.6587 8005.2695 -7793.1479 8004.2314 c
-7792.9409 8003.8105 -7792.5991 8003.5 -7792.2881 8003.1104 c
-7791.8735 8002.5938 -7791.5239 8002.041 -7791.0669 8001.6621 c
-7790.6563 8001.3232 -7790.1318 8001.1094 -7789.6899 8000.8369 c
-7789.5708 8000.7646 -7789.5039 8000.6641 -7789.4043 8000.6074 c
-7789.0596 8000.4121 -7788.7935 8000.2031 -7788.4438 8000.0469 c
-7787.9819 7999.8418 -7787.4561 7999.7373 -7786.9253 7999.5146 c
-7786.6636 7999.4063 -7786.4443 7999.1953 -7786.1709 7999.085 c
-7786.0063 7999.0215 -7785.8311 7998.9688 -7785.6592 7998.9141 C
-7784.2695 7998.918 -7782.8613 7998.957 -7781.4375 7999.0342 c
-7779.7285 7999.0801 -7777.4653 7999.0938 -7775.5728 7999.166 C
-7743.4688 7995.6533 -7710.98 7994.7305 -7678.4746 7994.2822 C
-7605.0664 7995.6152 -7514.8774 7997.248 -7513.3535 7997.248 c
-7510.7773 7997.248 -7508.6909 7995.1602 -7508.6909 7992.584 c
-7508.6909 7990.0078 -7510.7773 7987.9209 -7513.3535 7987.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.038819 0 0.932555 0 1 0.94902 0 Xa
(CMYK Yellow)
Pc
0.827542 0.064729 0.957824 0.002594 0 0.65098 0.317647 Xa
(CMYK Green)
Pc
0.693446 0.140078 0 0 0 0.682353 0.937255 Xa
(CMYK Cyan)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(CMYK Blue)
Pc
0.006653 0.990021 0.005615 0 0.92549 0 0.54902 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0 0.897398 0.84744 0 0.937255 0.254902 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0 0.79855 0.939544 0.000092 0.945098 0.352941 0.160784 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.000732 0.495003 0.984894 0 0.968627 0.580392 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0 0.349462 0.845243 0 0.984314 0.690196 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.05594 0 0.899687 0 0.976471 0.929412 0.196078 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.197513 0.001373 0.983734 0 0.843137 0.87451 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.49723 0.00293 0.989471 0 0.552941 0.776471 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.861662 0.165713 1 0.032532 0 0.580392 0.266667 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.750637 0 0.748928 0 0.168627 0.713726 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.788235 0.104707 0.45008 0.000885 0 0.654902 0.615686 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.702144 0.15375 0 0 0.152941 0.666667 0.882353 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.848356 0.500084 0 0 0.109804 0.458824 0.737255 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.993927 0.930846 0.059907 0.003601 0.168627 0.223529 0.564706 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.301427 0.214023 0.14902 0.133333 0.384314 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.501945 0.992706 0.014649 0.00116 0.572549 0.152941 0.560784 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.092134 0.99704 0.484413 0.004273 0.854902 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0 0.946166 0.204593 0 0.933333 0.164706 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.251163 0.245762 0.398383 0 0.760784 0.709804 0.607843 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.391943 0.442054 0.491554 0.061463 0.607843 0.521569 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.514702 0.509239 0.616327 0.227451 0.447059 0.4 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.549706 0.600061 0.645899 0.398749 0.34902 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.233463 0.391485 0.638086 0.01416 0.768627 0.603922 0.423529 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.304051 0.497078 0.750851 0.094057 0.662745 0.486275 0.313726 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.358953 0.60058 0.803098 0.236179 0.545098 0.368627 0.235294 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.392248 0.642969 0.886656 0.354772 0.458824 0.298039 0.160784 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.418647 0.692348 0.974792 0.488502 0.376471 0.223529 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.516899 0.701045 0.792386 0.691859 0.235294 0.141176 0.082353 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.677577 0.618402 0.58056 0.456641 0.254902 0.25098 0.258824 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.583215 0.494575 0.46363 0.148043 0.427451 0.431373 0.443137 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.522423 0.426978 0.407874 0.062379 0.501961 0.509804 0.521569 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.450904 0.360815 0.34818 0.01294 0.576471 0.584314 0.596078 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.36173 0.282292 0.271336 0 0.654902 0.662745 0.67451 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.264164 0.199466 0.195499 0 0.737255 0.745098 0.752941 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.169863 0.120485 0.123751 0 0.819608 0.827451 0.831373 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.040528 0.02359 0.026154 0 0.945098 0.94902 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.995392 0.873075 0.030457 0.001434 0.129412 0.25098 0.603922 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 0 0 0 1 1 1 Xa
0 R
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
0 J 0 j 0.001 w 10 M []0 d0 XR
221.7598 -199.9805 m
66.2402 -199.9805 L
66.2402 -88.0195 L
221.7598 -88.0195 L
221.7598 -199.9805 L
b
497.1602 -181.0801 m
497.1602 -196.5879 484.5879 -209.1602 469.0801 -209.1602 C
394.9199 -209.1602 L
379.4121 -209.1602 366.8398 -196.5879 366.8398 -181.0801 C
366.8398 -106.9199 L
366.8398 -91.4121 379.4121 -78.8398 394.9199 -78.8398 C
469.0801 -78.8398 L
484.5879 -78.8398 497.1602 -91.4121 497.1602 -106.9199 C
497.1602 -181.0801 L
s
515.8799 -181.0801 m
515.8799 -206.9268 494.9268 -227.8799 469.0801 -227.8799 C
394.9199 -227.8799 L
369.0732 -227.8799 348.1201 -206.9268 348.1201 -181.0801 C
348.1201 -106.9199 L
348.1201 -81.0732 369.0732 -60.1201 394.9199 -60.1201 C
469.0801 -60.1201 L
494.9268 -60.1201 515.8799 -81.0732 515.8799 -106.9199 C
515.8799 -181.0801 L
s
558 -181.0801 m
558 -230.1895 518.1895 -270 469.0801 -270 C
394.9199 -270 L
345.8105 -270 306 -230.1895 306 -181.0801 C
306 -106.9199 L
306 -57.8105 345.8105 -18 394.9199 -18 C
469.0801 -18 L
518.1895 -18 558 -57.8105 558 -106.9199 C
558 -181.0801 L
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
